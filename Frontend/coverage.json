{"service_name":"travis-ci","service_job_id":null,"git":{"head":{"id":"51b4d722969ee4b3c0223597d28f528eb3059d01\n","committer_email":"yhj3211006@snu.ac.kr\n","committer_name":"Whiteppanda\n","author_email":"yhj3211006@snu.ac.kr\n","author_name":"Whiteppanda\n","message":"tr\n"},"remotes":[],"branch":"v0.0.5\n"},"source_files":[{"name":"src/App.tsx","source":"import \"./App.css\";\nimport { BrowserRouter, Routes, Route} from \"react-router-dom\";\nimport Login from \"./containers/Login/Login\";\nimport Home from \"./containers/Home/Home\";\nimport Closet from \"./containers/Closet/Closet\";\nimport Outfit from \"./containers/Outfit/Outfit\";\nimport OutfitDetail from \"./containers/OutfitDetail/OutfitDetail\";\nimport Redirect from \"./containers/Redirect/Redirect\";\nimport React from \"react\";\nimport Signup from \"./containers/Signup/Signup\";\nimport Setting from \"./containers/Setting/Setting\";\n// import axios from 'axios';\n// import { useCookies } from 'react-cookie';\n\n// const [cookies] = useCookies()\n\n// axios.defaults.xsrfCookieName = 'csrftoken'\n// axios.defaults.xsrfHeaderName = \"X-CSRFToken\"\n// axios.defaults.headers.common['X-CSRFToken'] = cookies[\"csfttoken\"];\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Routes>\n\t\t\t\t\t<Route path=\"/closet\" element={<Closet />} />\n\t\t\t\t\t<Route path=\"/home\" element={<Home />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath=\"/outfit\"\n\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t<Outfit\n\t\t\t\t\t\t\t\tuserHave={false}\n\t\t\t\t\t\t\t\trecommend={false}\n\t\t\t\t\t\t\t\ttype={null}\n\t\t\t\t\t\t\t\tcolor={null}\n\t\t\t\t\t\t\t\tpattern={null}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/outfit/:id\" element={<OutfitDetail />} />\n\t\t\t\t\t<Route path=\"/\" element={<Login />} />\n\t\t\t\t\t<Route path=\"/signup\" element={<Signup />} />\n\t\t\t\t\t<Route path=\"*\" element={<h1>Not Found</h1>} />\n\t\t\t\t\t<Route path=\"/redirect\" element={<Redirect />} />\n\t\t\t\t\t<Route path=\"/setting\" element={<Setting/>}/>\n\t\t\t\t</Routes>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},{"name":"src/api/user.tsx","source":"\nimport axios from \"axios\";\n\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\n\nexport const signinUser = async (username: string, pw: string) => {\n\tconsole.log(\"called\");\n\tawait axios\n\t\t.get(\"/api/ooo/user/token/\")\n\t\t.then((response) => {\n\t\t\tconsole.log(response)\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(error.response);\n\t\t});\n\n\tconst data = { username: username, password: pw };\n\tconsole.log(data);\n\tconst option = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json;charset=UTF-8\",\n\t\t},\n\t\tbody: data,\n\t};\n\t// console.log(localStorage.getItem('token'))\n\tawait axios\n\t\t.post(\"/api/ooo/user/signin/\", option)\n\t\t.then(() => {\n\t\t\tlocalStorage.setItem(\"username\", username);\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.log(error.response);\n\t\t});\n};\n\nexport const signupUser = async (username: string, pw: string) => {\n\tconst data = { username: username, password: pw };\n\tconst option = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json;charset=UTF-8\",\n\t\t},\n\t\tbody: data,\n\t};\n\tconsole.log(option)\n\n\tconst response = await axios.post(\"/api/ooo/user/signup/\", option)\n\treturn response\n\n};\n\nexport const logoutUser = async () => {\n\tawait axios.get(\"/api/ooo/user/signout/\").then(() => {\n\t\tlocalStorage.removeItem(\"username\");\n\t})\n};\n\nexport const editUser = async (pw: string) => {\n\tconst data = { password: pw}\n\tconst option = {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json;charset=UTF-8\",\n\t\t},\n\t\tbody: data\n\t}\n\tawait axios.put(\"/api/ooo/user/info/\", option).then((response) => {\n\t\treturn response\n\t}).catch((e) => {\n\t\tconsole.log(e)\n\t})\n}\n\nexport const deleteUser = async () => {\n\tawait axios.delete(\"/api/ooo/user/info/\").then(() => {\n\t\tlocalStorage.removeItem(\"username\");\n\t}).catch((e) => {\n\t\tconsole.log(e)\n\t})\n}","coverage":[null,null,null,7,7,null,7,2,2,null,null,0,null,null,1,null,null,1,1,1,null,null,null,null,null,null,null,1,null,null,1,null,null,0,null,null,null,7,2,2,null,null,null,null,null,null,2,null,2,2,null,null,null,7,6,3,null,null,null,7,2,2,null,null,null,null,null,null,2,2,null,0,null,null,null,7,2,2,null,0,null,null]},{"name":"src/components/AddClothModal/AddClothModal.tsx","source":"import \"./AddClothModal.css\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppDispatch } from \"../../store\";\nimport {  createUserCloth } from \"../../store/slices/userCloth\";\nimport TypeFilter from \"../TypeFilter/TypeFilter\"\n\nexport interface IProps {\n    modal_close: (metaType: string) => void\n}\n\nconst AddClothModal = (props: IProps) => {\n\n\tconst [name, setName] = useState<string>(\"\");\t// 상의, 하의, 아우터\n\tconst [type, setType] = useState<string>(\"\");\n\tconst [color, setColor] = useState<string>(\"\");\n\tconst [pattern, setPattern] = useState<string>(\"\");\n\tconst [fileImage, setFileImage] = useState(\"\");\n\tconst [file, setFile] = useState<File>();\n\t// const [submitted, setSubmitted] = useState<boolean>(false);\n\n\tconst dispatch = useDispatch<AppDispatch>();\n\n\tconst METATYPEOPTIONS = [\n\t\t{ value: \"Type\" },\n\t\t{ value: \"상의\" },\n\t\t{ value: \"하의\" },\n\t\t{ value: \"아우터\" },\n\t];\n\n\t// useEffect(() => {\n\t// \talert('useffect')\n\t// \tdispatch(fetchUserClothes());\n\t// }, [submitted]);\n\n\tconst clickAddClothHandler = async () => {\n\t\tif (name && file && type && color && pattern) {\n\t\t\tconst data = {\n\t\t\t\tname: name,\n\t\t\t\timage: file,\n\t\t\t\ttype: type,\n\t\t\t\tcolor: color,\n\t\t\t\tpattern: pattern,\n\t\t\t};\n\t\t\tawait dispatch(createUserCloth(data));\n\t\t\tprops.modal_close(name);\n\t\t}\n\t\telse {\n\t\t\tif (!fileImage) alert('옷 사진을 업로드해주세요.')\n\t\t\telse if (!name || !type || !color || !pattern) alert('정보를 모두 입력해주세요.')\n\t\t}\n\t\t// setSubmitted(true);\n\t\t// window.location.reload();\n\t};\n\n\tconst saveFileImage = (e: any) => {\n\t\tsetFileImage(URL.createObjectURL(e.target.files[0]));\n\t\tsetFile(e.target.files[0])\n\t};\n\n\treturn (\n\t\t<div className=\"AddClothModal\">\n\t\t\t<div className=\"AddClothModalHead\">\n\t\t\t\t<text id=\"AddClothModal-text\">Add New Cloth</text>\n\t\t\t</div>\n\t\t\t<div className=\"AddClothModalTop\">\n\t\t\t\t<div className=\"UploadClothDiv\" data-testid=\"UploadClothDiv\">\n\t\t\t\t\t<div className=\"UploadedClothPreviewDiv\">\n\t\t\t\t\t\t{fileImage ? (\n\t\t\t\t\t\t\tfileImage && (\n\t\t\t\t\t\t\t\t<img id=\"uploaded-image-preview\" src={fileImage} height=\"400\" />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"UploadedClothTempDiv\"></div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\tid=\"upload-cloth-button\"\n\t\t\t\t\t\tdata-testid=\"upload-cloth-button\"\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tonChange={saveFileImage}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"CenterDiv\"></div>\n\t\t\t\t<div className=\"UploadedClothInfoDiv\">\n\t\t\t\t\t<div className=\"UploadedClothInfoDiv-sub\">\n\t\t\t\t\t\t<text id=\"UploadedClothInfoDiv-text\">Type</text>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<select id=\"type-select\" data-testid=\"select-component\" onChange={(e) => setName(e.target.value)}>\n\t\t\t\t\t\t\t{METATYPEOPTIONS.map((option, index) => (\n\t\t\t\t\t\t\t\t<option key={index} value={option.value} >\n\t\t\t\t\t\t\t\t\t{option.value}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"UploadedClothInfoDiv-sub\">\n\t\t\t\t\t\t<text id=\"UploadedClothInfoDiv-text\">세부 Type</text>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<TypeFilter metaType={name} selectHandler={setType}></TypeFilter>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"UploadedClothInfoDiv-sub\">\n\t\t\t\t\t\t<text id=\"UploadedClothInfoDiv-text\">Color</text>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"cloth-info-input\"\n\t\t\t\t\t\t\tdata-testid=\"cloth-info-input-color\"\n\t\t\t\t\t\t\tvalue={color}\n\t\t\t\t\t\t\tonChange={(e) => setColor(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"UploadedClothInfoDiv-sub\">\n\t\t\t\t\t\t<text id=\"UploadedClothInfoDiv-text\">Pattern</text>\n\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"cloth-info-input\"\n\t\t\t\t\t\t\tdata-testid=\"cloth-info-input-pattern\"\n\t\t\t\t\t\t\tvalue={pattern}\n\t\t\t\t\t\t\tonChange={(e) => setPattern(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"create-cloth-button\"\n\t\t\t\t\t\tdata-testid=\"create-cloth-button\"\n\t\t\t\t\t\tonClick={() => clickAddClothHandler()}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd to Closet\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddClothModal;","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,2,null,3,2,2,2,2,2,null,null,2,null,2,null,null,null,null,null,null,null,null,null,null,null,2,0,0,null,null,null,null,null,null,0,0,null,null,0,0,null,null,null,null,null,2,0,0,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,8,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null],"branches":[38,0,0,0,38,0,1,0,38,1,0,0,38,1,1,0,38,1,2,0,38,1,3,0,38,1,4,0,50,2,0,0,50,2,1,0,51,3,0,0,51,3,1,0,51,4,0,0,51,4,1,0,51,4,2,0,51,4,3,0,70,5,0,0,70,5,1,2,71,6,0,0,71,6,1,0]},{"name":"src/components/ClosetItem/ClosetItem.tsx","source":"import \"./ClosetItem.css\";\nimport React from \"react\";\nimport { useState} from \"react\";\nimport { useDispatch } from \"react-redux\";\n//import { useParams } from \"react-router\";\n//import { NavLink, useNavigate, useLocation } from \"react-router-dom\";\nimport { AppDispatch } from \"../../store\";\nimport Modal from \"react-modal\";\nimport ClothDetailModal from \"../../components/ClothDetailModal/ClothDetailModal\";\n\nexport interface IProps {\n\tuser_cloth_id: string;\n\tsource_url: string;\n\tweardate: string;\n\tmetatype: string;\n\ttype: string;\n\tcolor: string;\n\tpattern: string;\n\tclickClothDetailPopupHandler?: () => void;\n\ttmp?: (metatype: string) => void;\n\t// clickOnDeleteHandler?: (metaType: string) => void;\n}\n\nconst ClosetItem = (props: IProps) => {\n\n\tconst [clothDetailModalOpen, setClothDetailModalOpen] = useState(false);\n\t// const [submitted, setSubmitted] = useState<boolean>();\n\t// const [filteredList, setFilteredList] = useState<UserClothType[]>([]);\n\n\tconst clickClothDetailPopupHandler = () => {\n\t\tsetClothDetailModalOpen(true);\n\t};\n\n\tconst clickClothDetailPopupCloseHandler = () => {\n\t\tsetClothDetailModalOpen(!clothDetailModalOpen);\n\t\tif (props.tmp) {\n\t\t\tprops.tmp(props.metatype)\n\t\t}\n\t\t// setSubmitted(true);\n\t};\n\n\t// useEffect(() => {\n\t// \t// alert('진입')\n\t// \tdispatch(fetchUserClothes());\n\t// \tsetSubmitted(false);\n\t// }, [submitted]);\n\n\treturn (\n\t\t<div className=\"ClosetItem\">\n\n\t\t\t<div\n\t\t\t\tclassName=\"ClothImage\"\n\t\t\t\tdata-testid=\"clothimg\"\n\t\t\t\tonClick={clickClothDetailPopupHandler}\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tdata-testid=\"cloth-img\"\n\t\t\t\t\tid=\"cloth-img\"\n\t\t\t\t\tsrc={props.source_url}\n\t\t\t\t></img>\n\t\t\t</div>\n\t\t\t<Modal\n\t\t\t\tariaHideApp={false}\n\t\t\t\tid=\"detail-modal\"\n\t\t\t\tdata-testid=\"detail-modal\"\n\t\t\t\tisOpen={clothDetailModalOpen}\n\t\t\t>\n\t\t\t\t<ClothDetailModal\n\t\t\t\t\tid={props.user_cloth_id}\n\t\t\t\t\timage={props.source_url}\n\t\t\t\t\tweardate={props.weardate}\n\t\t\t\t\tmetatype={props.metatype}\n\t\t\t\t\ttype={props.type}\n\t\t\t\t\tcolor={props.color}\n\t\t\t\t\tpattern={props.pattern}\n\t\t\t\t\tmodal_close={clickClothDetailPopupCloseHandler}\n\t\t\t\t></ClothDetailModal>\n\t\t\t\t<div id=\"close-buton-div\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"modal-close-button\"\n\t\t\t\t\t\tdata-testid=\"modal-close-button\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetClothDetailModalOpen(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t닫기\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t\t<div className=\"ClothLable\">\n\t\t\t\t<text id=\"type-label\"><b>종류</b></text>\n\t\t\t\t<text id=\"type-text\">{props.type}</text>\n\t\t\t\t<text id=\"color-label\"><b>색상</b></text>\n\t\t\t\t<text id=\"color-text\">{props.color}</text>\n\t\t\t\t<text id=\"stripe-label\"><b>무늬</b></text>\n\t\t\t\t<text id=\"stripe-text\">{props.pattern}</text>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ClosetItem;","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,0,null,null,null,0,0,null,null,0,0,0,0,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[36,0,0,0,36,0,1,0]},{"name":"src/components/ClothDetailModal/ClothDetailModal.tsx","source":"import \"./ClothDetailModal.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppDispatch } from \"../../store\";\nimport { fetchUserCloth, editUserCloth, deleteUserCloth, addWearDate } from \"../../store/slices/userCloth\";\nimport TypeFilter from \"../TypeFilter/TypeFilter\"\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport interface IProps {\n\tid: string;\n\timage: string;\n\tweardate: string;\n\tmetatype: string;\n\ttype: string;\n\tcolor: string;\n\tpattern: string;\n\tmodal_close: () => void;\n}\n\nconst ClothDetailModal = (cloth: IProps) => {\n\tconst navigate = useNavigate();\n\tconsole.log(cloth.weardate ? cloth.weardate : \"no\")\n\tconst defaultDates = cloth.weardate ?\n\t\tJSON.parse(cloth.weardate).map((date:any) => new Date(date)) :\n\t\t[]\n\n\tconst [type, setType] = useState(cloth.type);\n\tconst [color, setColor] = useState(cloth.color);\n\tconst [pattern, setPattern] = useState(cloth.pattern);\n\tconst [highlightDates, setHighlightDates] = useState(defaultDates)\n\tconst [wearDate, setWearDate] = useState(new Date());\n\tconst [isEditable, setIsEditable] = useState(false);\n\tconst [addOrDelete, setAddOrDelete] = useState(true); // add: true, delete: false\n\n\tconst dispatch = useDispatch<AppDispatch>();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchUserCloth(Number(cloth.id)));\n\t}, [cloth.id]);\n\n\n\tuseEffect(() => {\n\t\tconsole.log();\n\t}, [highlightDates]);\n\n\tconst clickMoveToRecommendedStyleHandler = () => {\n\t\tconst clothData = {\n\t\t\ttype: type,\n\t\t\tcolor: color,\n\t\t\tpattern: pattern\n\t\t}\n\t\tnavigate(\"/outfit/\",  { state: clothData });\n\t};\n\n\tconst clickEditClothHandler = async () => {\n\t\tsetIsEditable(false);\n\t\tconst data = {\n\t\t\tid: Number(cloth.id),\n\t\t\ttype: type,\n\t\t\tcolor: color,\n\t\t\tpattern: pattern\n\t\t};\n\t\tawait dispatch(editUserCloth(data));\n\t}\n\n\tconst clickDeleteClothHandler = async () => {\n\t\tawait dispatch(deleteUserCloth(Number(cloth.id)));\n\t\tcloth.modal_close();\n\t};\n\n\tconst dateFormat = (date: any) => {\n\t\treturn `${date.getFullYear()}/${date.getMonth()+1}/${date.getDate()}`\n\t}\n\n\tconst setWearDateHandler = (clickedDate: any) => {\n\t\tsetWearDate(clickedDate);\n\n\t\t// if clicked date is in weardate list, set addOrDelete = false\n\t\tconst parsedWearDates = highlightDates.map((d: any) => dateFormat(d));\n\t\tif (parsedWearDates) {\n\t\t\tconst clickedDateStr = dateFormat(clickedDate);\n\t\t\tconst exist = parsedWearDates.includes(clickedDateStr);\n\n\t\t\tif (exist) setAddOrDelete(false)\n\t\t\telse setAddOrDelete(true)\n\t\t}\n\t\telse {\n\t\t\tsetAddOrDelete(true)\n\t\t}\n\t}\n\n\tconst clickSaveWearDateHandler = async (addOrDelete: boolean) => {\n\t\tconst wearDateStr = dateFormat(wearDate)\n\t\tconst data = {\n\t\t\tid: Number(cloth.id),\n\t\t\tdates: String(wearDateStr)\n\t\t};\n\t\tconst result = await dispatch(addWearDate(data));\n\t\talert(`입은 날짜가 ${addOrDelete ? '기록' : '삭제'}되었습니다: ${wearDateStr}`);\n\n\t\tif (result.payload.dates) {\n\t\t\tsetHighlightDates(JSON.parse(result.payload.dates).map((date:any) => new Date(date)));\n\t\t}\n\t\telse {\n\t\t\tsetHighlightDates([]);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"ClothDetailModal\">\n\t\t\t<div className=\"ClothDetailModalHead\">\n\t\t\t\t<text id=\"ClothDetailModal-text\">Cloth Detail</text>\n\t\t\t</div>\n\t\t\t<div className=\"ClothDetailModalTop\">\n\t\t\t\t<div className=\"ClothImage-modal\">\n\t\t\t\t\t<img id=\"cloth-img-modal\" data-testid=\"cloth-img-modal\" src={cloth.image}></img>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ClothLable-modal\">\n\t\t\t\t\t<text id=\"type-label-modal\">\n\t\t\t\t\t\t<b>종류</b>\n\t\t\t\t\t</text>\n\t\t\t\t\t{isEditable ? (\n\t\t\t\t\t\t<TypeFilter metaType={cloth.metatype} selectHandler={setType}></TypeFilter>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<text id=\"type-text-modal\">{type}</text>\n\t\t\t\t\t)}\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<text id=\"color-label-modal\">\n\t\t\t\t\t\t<b>색상</b>\n\t\t\t\t\t</text>\n\t\t\t\t\t{isEditable ? (\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={color}\n\t\t\t\t\t\t\tonChange={(e) => setColor(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<text id=\"type-text-modal\">{color}</text>\n\t\t\t\t\t)}\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<text id=\"stripe-label-modal\">\n\t\t\t\t\t\t<b>무늬</b>\n\t\t\t\t\t</text>\n\t\t\t\t\t{isEditable ? (\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={pattern}\n\t\t\t\t\t\t\tonChange={(e) => setPattern(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<text id=\"type-text-modal\">{pattern}</text>\n\t\t\t\t\t)}\n\t\t\t\t\t<br></br>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ClothWearDate-modal\">\n\t\t\t\t\t<b>입은 날짜</b><br></br>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdateFormat=\"yyyy/MM/dd\"\n\t\t\t\t\t\thighlightDates={highlightDates}\n\t\t\t\t\t\tselected={wearDate}\n\t\t\t\t\t\tonChange={(clickedDate: any) => setWearDateHandler(clickedDate)}\n\t\t\t\t\t\tinline\n\t\t\t\t\t/>\n\t\t\t\t\t{addOrDelete ? (\n\t\t\t\t\t\t<button id=\"save-weardate-button\" onClick={() => clickSaveWearDateHandler(true)}>\n\t\t\t\t\t\t\t입은 날짜 추가하기\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (<button id=\"delete-weardate-button\" onClick={() => clickSaveWearDateHandler(false)}>\n\t\t\t\t\t\t\t입은 날짜 삭제하기\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"ClothButton-modal\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"move-recommend-button\"\n\t\t\t\t\t\tonClick={() => clickMoveToRecommendedStyleHandler()}\n\t\t\t\t\t>\n\t\t\t\t\t\tGet Recommendation\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"edit-cloth-detail\">\n\t\t\t\t\t{isEditable ? (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"edit-cloth-button\"\n\t\t\t\t\t\t\tonClick={() => clickEditClothHandler()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFinish Edit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"edit-cloth-button\"\n\t\t\t\t\t\t\tonClick={() => setIsEditable(true)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEdit Cloth\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"delete-cloth-modal\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"delete-cloth-button\"\n\t\t\t\t\t\tonClick={() => clickDeleteClothHandler()}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete Cloth\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ClothDetailModal;\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,0,0,0,0,null,null,0,0,0,0,0,0,0,null,0,null,0,0,null,null,null,0,0,null,null,0,0,null,null,null,null,0,null,null,0,0,0,null,null,null,null,null,0,null,null,0,0,0,null,null,0,0,null,null,0,0,null,null,0,0,0,0,null,0,0,null,null,0,null,null,null,0,0,0,null,null,null,0,0,null,0,0,null,null,0,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,0,null,null,0,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null],"branches":[25,0,0,0,25,0,1,0,26,1,0,0,26,1,1,0,83,2,0,0,83,2,1,0,87,3,0,0,87,3,1,0,102,4,0,0,102,4,1,0,104,5,0,0,104,5,1,0,125,6,0,0,125,6,1,0,134,7,0,0,134,7,1,0,147,8,0,0,147,8,1,0,167,9,0,0,167,9,1,0,185,10,0,0,185,10,1,0]},{"name":"src/components/FilterModal/FilterModal.tsx","source":"import React from \"react\";\nimport \"./FilterModal.css\";\nimport { useState } from \"react\";\nimport TypeFilter from \"../TypeFilter/TypeFilter\";\n\nexport interface IProps {\n\tclickDoneHandler: (\n\t\ttype: string | null,\n\t\tcolor: string | null,\n\t\tpattern: string | null\n\t) => void;\n}\n\nconst FilterModal = (props: IProps) => {\n\tconst [type, setType] = useState<string | null>(null);\n\tconst [color, setColor] = useState<string | null>(null);\n\tconst [pattern, setPattern] = useState<string | null>(null);\n\tconst [metaType, setMetaType] = useState<string | null>(null);\n\n\tconst ColorOptions = [\n\t\t{ value: \"Color\"},\n\t\t{ value: \"블랙\" },\n\t\t{ value: \"그레이\" },\n\t\t{ value: \"베이지\" },\n\t\t{ value: \"네이비\" },\n\t\t{ value: \"데님\" },\n\t\t{ value: \"아이보리\" },\n\t\t{ value: \"카키\" },\n\t\t{ value: \"기타색상\" },\n\t\t{ value: \"블루\" },\n\t\t{ value: \"브라운\" },\n\t\t{ value: \"화이트\" },\n\t\t{ value: \"그린\" },\n\t\t{ value: \"레드\" },\n\t\t{ value: \"오렌지\" },\n\t\t{ value: \"연청\" },\n\t\t{ value: \"진청\" },\n\t\t{ value: \"청\" },\n\t\t{ value: \"옐로우\" },\n\t\t{ value: \"퍼플\" },\n\t\t{ value: \"핑크\" },\n\t\t{ value: \"민트\" },\n\t];\n\n\tconst PatternOptions = [\n\t\t{ value: \"Pattern\"},\n\t\t{ value: \"None\" },\n\t\t{ value: \"로고\" },\n\t\t{ value: \"스트라이프\" },\n\t\t{ value: \"체크\" },\n\t\t{ value: \"자수\" },\n\t];\n\n\tconst MetaTypeOptions = [\n\t\t{ value: \"옷 종류\" },\n\t\t{ value: \"상의\" },\n\t\t{ value: \"하의\" },\n\t\t{ value: \"아우터\" },\n\t];\n\n\tconst clickMetaTypeOptionHandler = (value: string) => {\n\t\tif (value == \"옷 종류\") {\n\t\t\tsetMetaType(null);\n\t\t} else {\n\t\t\tsetMetaType(value);\n\t\t}\n\t};\n\n\tconst clickTypeOptionHandler = (value: string) => {\n\t\tif (\n\t\t\tvalue == \"상의 종류\" ||\n\t\t\tvalue == \"하의 종류\" ||\n\t\t\tvalue == \"아우터 종류\"\n\t\t) {\n\t\t\tsetType(null);\n\t\t} else setType(value);\n\t};\n\n\tconst clickColorOptionHandler = (value: string) => {\n\t\tif (value == \"Color\") {\n\t\t\tsetColor(null);\n\t\t} else setColor(value);\n\t};\n\n\tconst clickPatternOptionHandler = (value: string) => {\n\t\tif (value == \"Pattern\") {\n\t\t\tsetPattern(null);\n\t\t} else setPattern(value);\n\t};\n\n\treturn (\n\t\t<div className=\"FilterModal\">\n\t\t\t<div>\n\t\t\t\t<select id=\"type-select\"\n\t\t\t\tonChange={(e) => clickMetaTypeOptionHandler(e.target.value)}>\n\t\t\t\t\t{MetaTypeOptions.map((option, index) => (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option.value}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t\t<TypeFilter\n\t\t\t\t\tdata-testid=\"typefilter\"\n\t\t\t\t\tmetaType={metaType}\n\t\t\t\t\tselectHandler={clickTypeOptionHandler}\n\t\t\t\t></TypeFilter>\n\t\t\t</div>\n\t\t\t<select id=\"color-select\"\n\t\t\tonChange={(e) => clickColorOptionHandler(e.target.value)}>\n\t\t\t\t{ColorOptions.map((option, index) => (\n\t\t\t\t\t<option\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\tonClick={() => {clickColorOptionHandler(option.value)}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option.value}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\n\t\t\t<select id=\"pattern-select\"\n\t\t\tonChange={(e) => clickPatternOptionHandler(e.target.value)}>\n\t\t\t\t{PatternOptions.map((option, index) => (\n\t\t\t\t\t<option\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\tonClick={() => {clickPatternOptionHandler(option.value)}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{option.value}\n\t\t\t\t\t</option>\n\t\t\t\t))}\n\t\t\t</select>\n\n\t\t\t<button\n\t\t\t\tid=\"done-button\"\n\t\t\t\tdata-testid=\"done-button\"\n\t\t\t\tonClick={() => props.clickDoneHandler(type, color, pattern)}\n\t\t\t>\n\t\t\t\tDone\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default FilterModal;\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,1,14,14,14,14,null,14,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,14,null,null,null,null,null,null,null,null,14,null,null,null,null,null,null,14,1,0,null,1,null,null,null,14,2,null,null,null,null,2,0,null,null,14,3,1,2,null,null,14,3,1,2,null,null,14,null,null,null,1,null,56,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,308,null,null,2,null,null,null,null,null,null,null,1,null,84,null,null,2,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null],"branches":[62,0,0,0,62,0,1,1,70,1,0,2,70,1,1,0,71,2,0,2,71,2,1,0,71,2,2,0,80,3,0,1,80,3,1,2,86,4,0,1,86,4,1,2]},{"name":"src/components/Header/Header.tsx","source":"import \"./Header.css\";\nimport React from \"react\";\n\nexport interface IProps {\n\tclickHeaderHandler?: () => void;\n\tclickInfoHandler?: () => void;\n\tclickLogoutHandler?: () => void;\n}\n\nconst Header = (props: IProps) => {\n\treturn (\n\t\t<div className=\"Header\">\n\t\t\t<div\n\t\t\t\tclassName=\"headerText\"\n\t\t\t\tdata-testid=\"logo\"\n\t\t\t\tonClick={props.clickHeaderHandler}\n\t\t\t>\n\t\t\t\t<text id=\"appName\">oOo</text>\n\t\t\t\t<text id=\"detailAppName\">:recommend your outfit</text>\n\t\t\t</div>\n\t\t\t<div className=\"headerButton\">\n\t\t\t\t<button\n\t\t\t\t\tid=\"infoButton\"\n\t\t\t\t\tdata-testid=\"info\"\n\t\t\t\t\tonClick={props.clickInfoHandler}\n\t\t\t\t>\n\t\t\t\t\t내 정보\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tid=\"logoutButton\"\n\t\t\t\t\tdata-testid=\"logout\"\n\t\t\t\t\tonClick={props.clickLogoutHandler}\n\t\t\t\t>\n\t\t\t\t\t로그아웃\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n\nexport default Header;\n","coverage":[null,null,null,null,null,null,null,null,null,1,4,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},{"name":"src/components/OutfitPreview/OutfitPreview.tsx","source":"import \"./OutfitPreview.css\";\nimport React from \"react\";\n\nexport interface IProps {\n\tsource_url: string;\n\tinfo: string;\n\tclickOutfitDetail?: () => void;\n}\n\nconst OutfitPreview = (props: IProps) => {\n\t//print outfit as preview\n\n\treturn (\n\t\t<div className=\"OutfitPreview\">\n\t\t\t<div className=\"OutfitImage\">\n\t\t\t\t<img\n\t\t\t\t\tdata-testid=\"outfit-img\"\n\t\t\t\t\tid=\"outfit-img\"\n\t\t\t\t\tsrc={props.source_url}\n\t\t\t\t\tonClick={props.clickOutfitDetail}\n\t\t\t\t></img>\n\t\t\t</div>\n\t\t\t<div className=\"OutfitLable\">\n\t\t\t\t<text id=\"outfit-info-text\" data-testid = 'outfit-info-text'>{props.info}</text>\n\t\t\t\t{/* {props.cloth_names.map((cloth_name: string, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<text key={index} id=\"cloth-name\">\n\t\t\t\t\t\t\t{cloth_name}\n\t\t\t\t\t\t</text>\n\t\t\t\t\t);\n\t\t\t\t})} */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default OutfitPreview;","coverage":[null,null,null,null,null,null,null,null,null,1,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},{"name":"src/components/SampleClothModal/SampleClothModal.tsx","source":"import \"./SampleClothModal.css\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport interface Iprops {\n\tuserHave: boolean;\n\tuserCloth_url: string | undefined;\n\tsampleCloth_url: string | undefined;\n\ttype: string | undefined;\n\tcolor: string | undefined;\n\tpattern: string | undefined;\n\tsampleCloth_name: string | undefined;\n\tsampleCloth_link: string | undefined;\n}\n\nconst SampleClothModal = (props: Iprops) => {\n\tconst navigate = useNavigate();\n\n\tconst clickPurchaseButtonHander = () => {\n\t\tif (props.sampleCloth_link as string){\n\t\t\tnavigate(\"/Redirect\", { state: { url: props.sampleCloth_link } });\n\t\t}\n\t\telse{\n\t\t\tnavigate('*');\n\t\t}\n\t};\n\n\tif (props.userHave) {\n\t\treturn (\n\t\t\t<div className=\"SampleClothModal\">\n\t\t\t\t<text id=\"samplecloth-title\">Clothes Data</text>\n\t\t\t\t<div className=\"Body\">\n\t\t\t\t\t<div className=\"sampleDiv\">\n\t\t\t\t\t\t<img className=\"sample-image\" data-testid = \"no-sample-image-text\" src={props.sampleCloth_url} alt='샘플 이미지가 없습니다.'></img>\n\t\t\t\t\t\t<text id=\"sample-image-title\">코디 이미지</text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"userDiv\">\n\t\t\t\t\t\t<img className=\"user-image\" src={props.userCloth_url} alt = '유저 옷 이미지가 없습니다.'></img>\n\t\t\t\t\t\t<text id=\"user-image-title\">유저 이미지</text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"DataDiv\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"purchase-button\"\n\t\t\t\t\t\t\tonClick={() => clickPurchaseButtonHander()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPurchase Button\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.sampleCloth_name?\n\t\t\t\t\t\t\t<text id=\"cloth-name\">{props.sampleCloth_name}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id = 'cloth-name'>샘플 이름이 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"ClothTags\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.type?\n\t\t\t\t\t\t\t<text id=\"cloth-type\">Type : {props.type}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id=\"cloth-type\">Type : 옷 타입을 정의할 수 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.color?\n\t\t\t\t\t\t\t<text id=\"cloth-color\">Color : {props.color}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id=\"cloth-color\">Color : 옷 색상을 정의할 수 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.pattern?\n\t\t\t\t\t\t\t<text id=\"cloth-pattern\">Pattern : {props.pattern}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id=\"cloth-pattern\">Pattern : 옷 패턴을 정의할 수 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"SampleClothModal\">\n\t\t\t\t<text id=\"samplecloth-title\">Clothes Data</text>\n\t\t\t\t<div className=\"Body\">\n\t\t\t\t\t<div className=\"sampleDiv\">\n\t\t\t\t\t\t<img className=\"sample-image\" src={props.sampleCloth_url} alt='샘플 이미지가 없습니다.'></img>\n\t\t\t\t\t\t<text id=\"sample-image-title\">코디 이미지</text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"DataDiv\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"purchase-button\"\n\t\t\t\t\t\t\tonClick={() => clickPurchaseButtonHander()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPurchase Button\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.sampleCloth_name?\n\t\t\t\t\t\t\t<text id=\"cloth-name\">{props.sampleCloth_name}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id = 'cloth-name'>샘플 이름이 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div className=\"ClothTags\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.type?\n\t\t\t\t\t\t\t<text id=\"cloth-type\">Type : {props.type}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id=\"cloth-type\">Type : 옷 타입을 정의할 수 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.color?\n\t\t\t\t\t\t\t<text id=\"cloth-color\">Color : {props.color}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id=\"cloth-color\">Color : 옷 색상을 정의할 수 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tprops.pattern?\n\t\t\t\t\t\t\t<text id=\"cloth-pattern\">Pattern : {props.pattern}</text>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<text id=\"cloth-pattern\">Pattern : 옷 패턴을 정의할 수 없습니다.</text>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n};\n\nexport default SampleClothModal;","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,9,null,9,4,2,null,null,2,null,null,null,9,3,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,5,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[20,0,0,2,20,0,1,2,28,1,0,3,28,1,1,5,49,2,0,2,49,2,1,1,56,3,0,2,56,3,1,1,62,4,0,2,62,4,1,1,68,5,0,2,68,5,1,1,95,6,0,1,95,6,1,4,102,7,0,1,102,7,1,4,108,8,0,1,108,8,1,4,114,9,0,1,114,9,1,4]},{"name":"src/components/TypeFilter/TypeFilter.tsx","source":"import React, { useState, useEffect } from \"react\";\n\nexport interface IProps {\n\tmetaType: string | null;\n\tselectHandler: (value: string) => void;\n}\n\nconst TypeFilter = (props: IProps) => {\n\tconst [metaType, setMetaType] = useState<string | null>(props.metaType);\n\n\tconst TopTypeOptions = [\n\t\t{ value: \"상의 종류\" },\n\t\t{ value: \"반소매 티셔츠\" },\n\t\t{ value: \"피케/카라 티셔츠\" },\n\t\t{ value: \"긴소매 티셔츠\" },\n\t\t{ value: \"맨투맨/스웨트셔츠\" },\n\t\t{ value: \"민소매 티셔츠\" },\n\t\t{ value: \"후드 티셔츠\" },\n\t\t{ value: \"셔츠/블라우스\" },\n\t\t{ value: \"니트/스웨터\" },\n\t\t{ value: \"기타 상의\" },\n\t];\n\n\tconst BottomTypeOptions = [\n\t\t{ value: \"하의 종류\" },\n\t\t{ value: \"데님 팬츠\" },\n\t\t{ value: \"숏 팬츠\" },\n\t\t{ value: \"코튼 팬츠\" },\n\t\t{ value: \"레깅스\" },\n\t\t{ value: \"슈트 팬츠/슬랙스\" },\n\t\t{ value: \"점프 슈트/오버올\" },\n\t\t{ value: \"트레이닝/조거 팬츠\" },\n\t\t{ value: \"기타 바지\" },\n\t];\n\n\tconst OuterTypeOptions = [\n\t\t{ value: \"아우터 종류\" },\n\t\t{ value: \"후드 집업\" },\n\t\t{ value: \"환절기 코트\" },\n\t\t{ value: \"블루종/MA-1\" },\n\t\t{ value: \"겨울 싱글 코트\" },\n\t\t{ value: \"레더/라이더스 재킷\" },\n\t\t{ value: \"겨울 더블 코트\" },\n\t\t{ value: \"무스탕/퍼\" },\n\t\t{ value: \"겨울 기타 코트\" },\n\t\t{ value: \"롱패딩/롱헤비 아우터\" },\n\t\t{ value: \"트러커 재킷\" },\n\t\t{ value: \"슈트/블레이저 재킷\" },\n\t\t{ value: \"숏패딩/숏헤비 아우터\" },\n\t\t{ value: \"카디건\" },\n\t\t{ value: \"패딩 베스트\" },\n\t\t{ value: \"아노락 재킷\" },\n\t\t{ value: \"베스트\" },\n\t\t{ value: \"플리스/뽀글이\" },\n\t\t{ value: \"사파리/헌팅 재킷\" },\n\t\t{ value: \"트레이닝 재킷\" },\n\t\t{ value: \"나일론/코치 재킷\" },\n\t\t{ value: \"스타디움 재킷\" },\n\t\t{ value: \"기타 아우터\" },\n\t];\n\n\tconst NullTypeOptions = [{ value: \"세부 종류\" }];\n\n\tuseEffect(() => {\n\t\tsetMetaType(props.metaType);\n\t}, [props]);\n\n\tif (metaType == null) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select id=\"type-select\" disabled={true}>\n\t\t\t\t\t{NullTypeOptions.map((option, index) => (\n\t\t\t\t\t\t<option key={index} value={option.value}>\n\t\t\t\t\t\t\t{option.value}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</>\n\t\t);\n\t} else if (metaType == \"상의\") {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select id=\"type-select\" onChange={(e) => props.selectHandler(e.target.value)}>\n\t\t\t\t\t{TopTypeOptions.map((option, index) => (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\t// onClick={() => props.selectHandler(option.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option.value}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</>\n\t\t);\n\t} else if (metaType == \"하의\") {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select id=\"type-select\" onChange={(e) => props.selectHandler(e.target.value)}>\n\t\t\t\t\t{BottomTypeOptions.map((option, index) => (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\t// onClick={() => props.selectHandler(option.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option.value}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<select id=\"type-select\" onChange={(e) => props.selectHandler(e.target.value)}>\n\t\t\t\t\t{OuterTypeOptions.map((option, index) => (\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tvalue={option.value}\n\t\t\t\t\t\t\t// onClick={() => props.selectHandler(option.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option.value}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</>\n\t\t);\n\t}\n};\n\nexport default TypeFilter;\n","coverage":[null,null,null,null,null,null,null,3,6,null,6,null,null,null,null,null,null,null,null,null,null,null,null,6,null,null,null,null,null,null,null,null,null,null,null,6,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6,null,6,6,null,null,6,0,null,null,null,0,null,null,null,null,null,null,6,2,null,1,null,20,null,null,null,null,null,null,null,null,null,null,4,1,null,1,null,9,null,null,null,null,null,null,null,null,null,null,null,3,null,1,null,69,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[68,0,0,0,68,0,1,6,80,1,0,2,80,1,1,4,96,2,0,1,96,2,1,3]},{"name":"src/containers/Closet/Closet.tsx","source":"import \"./Closet.css\";\nimport { logoutUser } from \"../../api/user\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/Header/Header\";\nimport ClosetItem from \"../../components/ClosetItem/ClosetItem\";\nimport {\n\tselectUserCloth,\n\tfetchUserClothes,\n\tUserClothType,\n} from \"../../store/slices/userCloth\";\nimport { AppDispatch } from \"../../store\";\nimport Modal from \"react-modal\";\n\nimport AddClothModal from \"../../components/AddClothModal/AddClothModal\";\n// import ClothDetailModal from '../../components/ClothDetailModal/ClothDetailModal'\n\ntype ClosetItem = {\n\tid: number;\n\tsource_url: string;\n\ttype: string;\n\tcolor: string;\n\tpattern: string;\n};\n\nexport default function Closet() {\n\tconst type_tree =  [\n\t\t[['상의'], ['반소매 티셔츠', '피케/카라 티셔츠', '긴소매 티셔츠', '맨투맨/스웨트셔츠', '민소매 티셔츠', '후드 티셔츠', '셔츠/블라우스', '니트/스웨터', '기타 상의']], \n\t\t[['하의'], ['데님 팬츠', '숏 팬츠', '코튼 팬츠', '레깅스', '슈트 팬츠/슬랙스', '점프 슈트/오버올', '트레이닝/조거 팬츠', '기타 바지']], \n\t\t[['아우터'], ['후드 집업', '환절기 코트', '블루종/MA-1', '겨울 싱글 코트', '레더/라이더스 재킷', '겨울 더블 코트',\n\t\t\t\t'무스탕/퍼', '겨울 기타 코트', '롱패딩/롱헤비 아우터', '트러커 재킷', '슈트/블레이저 재킷', '숏패딩/숏헤비 아우터', '카디건', '패딩 베스트', '아노락 재킷',\n\t\t\t\t'베스트', '플리스/뽀글이', '사파리/헌팅 재킷', '트레이닝 재킷', '나일론/코치 재킷', '스타디움 재킷', '기타 아우터']]]\n\t\n\tconst TYPEOPTIONS = [\n\t\t{ value: \"Type\" },\n\t\t{ value: \"상의\" },\n\t\t{ value: \"하의\" },\n\t\t{ value: \"아우터\" },\n\t];\n\t\n\tconst navigate = useNavigate();\n\tconst userClothState = useSelector(selectUserCloth);\n\tconst dispatch = useDispatch<AppDispatch>();\n\n\tconst [filterOption, setFilterOption] = useState(\"Type\");\n\tconst [addClothModalOpen, setAddClothModalOpen] = useState(false);\n\tconst [submitted, setSubmitted] = useState<boolean>();\n\tconst [filteredList, setFilteredList] = useState<UserClothType[]>([]);\n\n\tconst clickAddClothPopupHandler = () => {\n\t\tsetAddClothModalOpen(true);\n\t};\n\n\tconst clickAddClothPopupCloseHandler = (metaType: string) => {\n\t\tsetAddClothModalOpen(!addClothModalOpen);\n\t\tsetFilterOption(metaType); // 추가한 metatype을 return받아서 setfilteroption해줘야함\n\t\tsetSubmitted(true);\n\t};\n\n\tconst clickOnDeleteHandler = (metaType: string) => {\n\t\tsetFilterOption(metaType); // 추가한 metatype을 return받아서 setfilteroption해줘야함\n\t\tsetSubmitted(true);\n\t};\n\n\tuseEffect(() => {\n\t\tdispatch(fetchUserClothes());\n\t\tfilter_list('Type');\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// alert('진입')\n\t\tdispatch(fetchUserClothes());\n\t\tfilter_list(filterOption); // setFilterOption 후에 set된 filteroption을 넣어줘야함\n\t\tsetSubmitted(false);\n\t}, [submitted]);\n\n\t//for logout\n\tconst [isSending, setIsSending] = useState(false)\n\tconst checkLoginned = () => {\n\t\tif(localStorage.getItem(\"username\") !== null){\n\t\t\treturn true\n\t\t}\n\t\telse return false\n\t};\n\n\tuseEffect(() => {\n\t\tconst redirect = () => {\n\t\t\tif (!checkLoginned()) {\n\t\t\t\tnavigate(\"/\");\n\t\t\t}\n\t\t};\n\t\tredirect();\n\t}, [isSending]);\n\n\tconst getType = (t:string) => {\n\t\tfor(let i =0; i< type_tree.length; i++){\n\t\t\tif(type_tree[i][1].includes(t)){\n\t\t\t\treturn type_tree[i][0]\n\t\t\t}\n\t\t}\n\t\treturn \"\"\n\t}\n\n\tconst filter_list = (t:string) => {\n\t\tif(t === 'Type'){\n\t\t\tsetFilteredList(userClothState.userClothes)\n\t\t}\n\t\telse{\n\t\t\tconst tmpUserCloth = userClothState.userClothes.filter((cloth) => { return t == getType(cloth.type); })\n\t\t\t// alert(JSON.stringify(tmpUserCloth))\n\t\t\tsetFilteredList(tmpUserCloth)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"Closet\">\n\t\t\t<div className=\"Closet-header\">\n\t\t\t\t<Header\n\t\t\t\t\tclickInfoHandler={() => {\n\t\t\t\t\t\tnavigate(\"/setting\");\n\t\t\t\t\t}}\n\t\t\t\t\tclickLogoutHandler={async() => {\n\t\t\t\t\t\tawait logoutUser().catch((error) => console.log(error))\n\t\t\t\t\t\tsetIsSending(!isSending)\n\t\t\t\t\t}}\n\t\t\t\t\tclickHeaderHandler={() => {\n\t\t\t\t\t\tnavigate(\"/home\");\n\t\t\t\t\t}}\n\t\t\t\t></Header>\n\t\t\t</div>\n\n\t\t\t<div className=\"ClosetTop\">\n\t\t\t\t<div className=\"ClosetDiv\">\n\t\t\t\t\t<div className=\"ClosetHead\">\n\t\t\t\t\t\t<text id=\"Closet-text-main\">Closet</text>\n\t\t\t\t\t\t<div id='Closet-select-div'>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tid=\"type-select\"\n\t\t\t\t\t\t\t\tdata-testid=\"select-component\"\n\t\t\t\t\t\t\t\t// defaultValue=\"Type\"\n\t\t\t\t\t\t\t\tonChange={(e) => {filter_list(e.target.value)}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{TYPEOPTIONS.map((option, index) => (\n\t\t\t\t\t\t\t\t\t<option key={index} value={option.value} >\n\t\t\t\t\t\t\t\t\t\t{option.value}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button id=\"add-cloth-button\" data-testid=\"add-cloth-button\" onClick={clickAddClothPopupHandler}>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tid=\"add-cloth-modal\"\n\t\t\t\t\t\t\tdata-testid=\"add-cloth-modal\"\n\t\t\t\t\t\t\tisOpen={addClothModalOpen}\n\t\t\t\t\t\t\t// onRequestClose={() => setAddClothModalOpen(false)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AddClothModal\n\t\t\t\t\t\t\t\tmodal_close={clickAddClothPopupCloseHandler}\n\t\t\t\t\t\t\t></AddClothModal>\n\t\t\t\t\t\t\t<div id=\"close-buton-div\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tid=\"modal-close-button\"\n\t\t\t\t\t\t\t\t\tdata-testid=\"modal-close-button\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetAddClothModalOpen(false);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t닫기\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ClosetItems\">\n\t\t\t\t\t{\n\t\t\t\t\t\tfilteredList.length !== 0 ? filteredList.map((cloth, index) => {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<ClosetItem\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tuser_cloth_id={String(cloth.id)}\n\t\t\t\t\t\t\t\t\tsource_url={cloth.image_link}\n\t\t\t\t\t\t\t\t\tweardate={cloth.dates}\n\t\t\t\t\t\t\t\t\tmetatype={cloth.name}\n\t\t\t\t\t\t\t\t\ttype={cloth.type}\n\t\t\t\t\t\t\t\t\tcolor={cloth.color}\n\t\t\t\t\t\t\t\t\tpattern={cloth.pattern}\n\t\t\t\t\t\t\t\t\ttmp={clickOnDeleteHandler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}) :\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<text id='add-cloth-text'>옷을 추가해보세요!</text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15,null,null,null,null,null,null,15,null,null,null,null,null,null,15,15,14,null,14,14,14,14,null,14,1,null,null,14,0,0,0,null,null,14,0,0,null,null,14,4,4,null,null,14,null,8,8,8,null,null,null,14,14,4,0,null,4,null,null,14,4,4,4,null,null,4,null,null,14,1,1,1,null,null,0,null,null,14,13,12,null,null,1,null,1,null,null,null,14,null,null,null,null,1,null,null,1,1,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,56,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,10,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[81,0,0,0,81,0,1,4,89,1,0,4,89,1,1,0,98,2,0,1,98,2,1,0,106,3,0,12,106,3,1,1,178,4,0,10,178,4,1,4]},{"name":"src/containers/Home/Home.tsx","source":"import { logoutUser } from \"../../api/user\";\nimport React, { useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../../components/Header/Header\";\nimport ClosetItem from \"../../components/ClosetItem/ClosetItem\";\nimport \"./Home.css\";\nimport OutfitPreview from \"../../components/OutfitPreview/OutfitPreview\";\nimport { AppDispatch } from \"../../store\";\nimport { selectUserCloth } from \"../../store/slices/userCloth\";\nimport { selectOutfit } from \"../../store/slices/outfit\";\nimport { fetchUserClothes } from \"../../store/slices/userCloth\";\nimport { fetchOutfits } from \"../../store/slices/outfit\";\nimport { fetchRecommendOutfit } from \"../../store/slices/userCloth\";\n\nexport default function Home() {\n\tconst navigate = useNavigate();\n\tconst dispatch = useDispatch<AppDispatch>();\n\tconst userClothes = useSelector(selectUserCloth);\n\tconst outfit = useSelector(selectOutfit);\n\tconst [Loading, setLoading] = useState(false);\n\t//for logout\n\tconst [isSending, setIsSending] = useState(false)\n\tconst checkLoginned = () => {\n\t\tif(localStorage.getItem(\"username\") !== null){\n\t\t\treturn true\n\t\t}\n\t\telse return false\n\t};\n\n\tuseEffect(() => {\n\t\tconst redirect = () => {\n\t\t\tif (!checkLoginned()) {\n\t\t\t\tnavigate(\"/\");\n\t\t\t}\n\t\t};\n\t\tredirect();\n\t}, [isSending]);\n\n\n\t\n\tuseEffect(()=>{\n\t//closet list, outfitlist 받아오는 것\n\t\tconst getData = async() => {\n\t\t\tsetLoading(true)\n\t\t\tdispatch(fetchUserClothes())\n\t\t\tdispatch(fetchOutfits());\n\t\t\tdispatch(fetchRecommendOutfit());\n\t\t\tsetLoading(false)\n\n\t\t}\n\t\tgetData()\n\t},[])\n\n\n\tif (Loading) {\n\t\treturn <div>Loading..</div>;\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"Home\">\n\t\t\t\t<div className=\"Home-header\"\n\t\t\t\t\tdata-testid='Header'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tclickInfoHandler={() => {\n\t\t\t\t\t\t\tnavigate(\"/setting\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclickLogoutHandler={async() => {\n\t\t\t\t\t\t\tawait logoutUser().catch((error) => console.log(error))\n\t\t\t\t\t\t\tsetIsSending(!isSending)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclickHeaderHandler={() => {\n\t\t\t\t\t\t\tnavigate(\"/home\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t></Header>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"HomeTop\">\n\t\t\t\t\t<div className=\"ClosetDiv\">\n\t\t\t\t\t\t<text id=\"Closet-text\">Closet</text>\n\t\t\t\t\t\t<div className=\"Closet-image\">\n\t\t\t\t\t\t\t<div className=\"Closet-item-box\"\n\t\t\t\t\t\t\tdata-testid='ClosetItem'>\n\t\t\t\t\t\t\t\t{userClothes.userClothes.length !== 0 ? userClothes.userClothes.map((cloth, index) => {\n\t\t\t\t\t\t\t\t\twhile (index < 6) {\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<ClosetItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\tuser_cloth_id={String(cloth.id)}\n\t\t\t\t\t\t\t\t\t\t\t\tsource_url={cloth.image_link} //나중에 바꿔야함.\n\t\t\t\t\t\t\t\t\t\t\t\tweardate={cloth.dates}\n\t\t\t\t\t\t\t\t\t\t\t\tmetatype={cloth.name}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={cloth.type}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={cloth.color}\n\t\t\t\t\t\t\t\t\t\t\t\tpattern={cloth.pattern}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<text id='add-cloth-text'>옷을 추가해보세요!</text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"Closet-button\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tid=\"more-button\"\n\t\t\t\t\t\t\t\tdata-testid='more-btn'\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tnavigate(\"/closet\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMore\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"CenterDiv\"></div>\n\t\t\t\t\t<div className=\"TodayOutfit\"\n\t\t\t\t\tdata-testid='TodayOutfit'>\n\t\t\t\t\t\t<text id=\"TodayOutfit-text\">Today{\"'\"}s Outfit</text>\n\t\t\t\t\t\t<div className=\"TodayOutfit-content\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuserClothes.recommendOutfit !== null ? \n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div className=\"TodayOutfit-image\" >\n\t\t\t\t\t\t\t\t\t\t<img id=\"today-outfit-img\" src={userClothes.recommendOutfit.image_link} data-testid = 'today-outfit-img'></img>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"TodayOutfit-lable\"\n\t\t\t\t\t\t\t\t\tdata-testid = 'TodayOutfit-lable'>\n\t\t\t\t\t\t\t\t\t\t<text id=\"today-outfit-info-text\">{userClothes.recommendOutfit.outfit_info}</text>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tuserClothes.recommendOutfit.userclothes.map((value, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text id=\"today-cloth-name\">{value.name}</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t<button id=\"wear-button\" data-testid='wear-button'>오늘 입기</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t: <div>\n\t\t\t\t\t\t\t\t\t<div className=\"TodayOutfit-image\" >\n\t\t\t\t\t\t\t\t\t\t<text id='add-cloth-text'> 옷을 추가해보세요! </text>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"HomeBottom\">\n\t\t\t\t\t<div className=\"OutfitDiv\">\n\t\t\t\t\t\t<div className=\"OutfitHead\">\n\t\t\t\t\t\t\t<text id=\"Outfit-text\">Outfit</text>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tid=\"outfit-more-button\"\n\t\t\t\t\t\t\t\tdata-testid='more-btn'\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tnavigate(\"/outfit\");\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMore\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"OutfitImage\" data-testid='OutfitPreview'>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\toutfit.outfits.map((outfit, index) => {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<div key={index} className='OutfitPreviewItem'>\n\t\t\t\t\t\t\t\t\t\t\t<OutfitPreview\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\tsource_url={outfit.image_link.toString()}\n\t\t\t\t\t\t\t\t\t\t\tinfo={outfit.outfit_info}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,11,11,11,10,10,null,10,10,5,0,null,5,null,null,10,5,5,5,null,null,5,null,null,null,null,10,null,5,5,5,5,5,5,null,null,5,null,null,null,10,0,null,10,null,null,null,null,null,2,null,null,2,1,null,null,1,null,null,null,null,null,null,null,null,null,null,null,10,10,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,10,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,10,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[25,0,0,0,25,0,1,5,33,1,0,5,33,1,1,0,56,2,0,0,56,2,1,10,83,3,0,10,83,3,1,0,124,4,0,10,124,4,1,0]},{"name":"src/containers/Login/Login.tsx","source":"import React, { useEffect } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { signinUser } from \"../../api/user\";\nimport \"./Login.css\";\n\nexport default function Login() {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [login, setLogin] = useState(false);\n\tconst [wrongInput, setWrongInput] = useState(false);\n\n\tconst navigate = useNavigate();\n\n\tconst checkLoginned = () => {\n\t\tconsole.log(localStorage.getItem(\"token\"));\n\t\treturn (\n\t\t\tlocalStorage.getItem(\"username\") !== null &&\n\t\t\t(localStorage.getItem(\"token\") !== null ||\n\t\t\t\tlocalStorage.getItem(\"token\") !== undefined)\n\t\t);\n\t\t// return false;\n\t};\n\n\tuseEffect(() => {\n\t\tconst redirect = () => {\n\t\t\tif (checkLoginned()) {\n\t\t\t\tnavigate(\"/home\");\n\t\t\t}\n\t\t};\n\t\tredirect();\n\t}, []);\n\n\tconst postLoginHandler = async () => {\n\t\tawait signinUser(username, password);\n\t\tif (checkLoginned()) {\n\t\t\tsetLogin(true);\n\t\t} else {\n\t\t\tsetWrongInput(true);\n\t\t}\n\t};\n\n\tconst clickSignUpHandler = () => {\n\t\tnavigate(\"/signup\");\n\t}\n\n\tif (login) {\n\t\treturn <Navigate to=\"/home\" />;\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"Login\">\n\t\t\t\t<div className=\"header-div\">\n\t\t\t\t\t<text id=\"appName\">oOo</text>\n\t\t\t\t\t<text id=\"detailAppName\">:recommend your outfit</text>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form\">\n\t\t\t\t\t<div className=\"form-margin-left\"></div>\n\t\t\t\t\t<div className=\"login-form\">\n\t\t\t\t\t\t<div className=\"login-text\">\n\t\t\t\t\t\t\t<text id=\"signin-signup-text\">로그인 및 회원가입</text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"username-div\">\n\t\t\t\t\t\t\t<text id=\"username-text\">ID</text>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"username-input\"\n\t\t\t\t\t\t\t\tdata-testid=\"username-input\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\tonChange={(event) => setUsername(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"pw-div\">\n\t\t\t\t\t\t\t<text id=\"pw-text\">PW</text>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tid=\"pw-input\"\n\t\t\t\t\t\t\t\tdata-testid=\"pw-input\"\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"wrong-div\">\n\t\t\t\t\t\t\t{!wrongInput ? (\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<text data-testid=\"wrong-text\" id=\"wrong-text\">ID, Password가 틀렸습니다.</text>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"button-div\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tid=\"login-button\"\n\t\t\t\t\t\t\t\tdata-testid=\"login-button-test\"\n\t\t\t\t\t\t\t\tonClick={() => postLoginHandler()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t로그인\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tid=\"signup-button\"\n\t\t\t\t\t\t\t\tdata-testid=\"signup-button\"\n\t\t\t\t\t\t\t\tonClick={() => clickSignUpHandler()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t회원가입\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-margin-right\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","coverage":[null,null,null,null,null,null,null,7,6,6,6,null,6,null,6,4,4,null,null,null,null,null,null,null,6,3,3,1,null,null,3,null,null,6,2,1,1,null,0,null,null,null,6,0,null,null,6,1,null,5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null],"branches":[18,0,0,4,18,0,1,2,18,0,2,2,27,1,0,1,27,1,1,2,36,2,0,1,36,2,1,0,47,3,0,1,47,3,1,5,82,4,0,5,82,4,1,0]},{"name":"src/containers/Outfit/Outfit.tsx","source":"import { logoutUser } from \"../../api/user\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../../components/Header/Header\";\nimport FilterModal from \"../../components/FilterModal/FilterModal\";\nimport \"./Outfit.css\";\nimport Modal from \"react-modal\";\nimport { AppDispatch } from \"../../store\";\nimport { selectOutfit } from \"../../store/slices/outfit\";\nimport {\n\tfetchFilteredOutfits,\n\tFilterPostInputType,\n} from \"../../store/slices/outfit\";\n\nexport interface IProps {\n\tuserHave: boolean;\n\trecommend: boolean;\n\ttype: string | null;\n\tcolor: string | null;\n\tpattern: string | null;\n}\n\nexport default function Outfit(props: IProps) {\n\tconst dispatch = useDispatch<AppDispatch>();\n\tconst outfitState = useSelector(selectOutfit);\n\t// const { state } = useLocation();\n\t// console.log(\"OUTFIT STATE WITH PROPS\")\n\t// console.log(state);\n\n\tconst [userHave, setUserHave] = useState(false);\n\tconst [recommend, setRecommend] = useState(false);\n\tconst [clothFilter, setClothFilter] = useState(false);\n\tconst [filters, setFilters] = useState({\n\t\ttype: props.type,\n\t\tcolor: props.color,\n\t\tpattern: props.pattern,\n\t});\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [isLast, setIsLast] = useState(outfitState.isLast);\n\n\tconst [page, setPage] = useState(1);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst navigate = useNavigate();\n\n\tconst [isSending, setIsSending] = useState(false);\n\tconst checkLoginned = () => {\n\t\tif (localStorage.getItem(\"username\") !== null) {\n\t\t\treturn true;\n\t\t} else return false;\n\t};\n\n\tuseEffect(() => {\n\t\t//login check, redirect to login page\n\t\tconst redirect = () => {\n\t\t\tif (!checkLoginned()) {\n\t\t\t\tnavigate(\"/\");\n\t\t\t}\n\t\t};\n\t\tredirect();\n\t}, [isSending]);\n\n\tuseEffect(() => {\n\t\t//closet list, outfitlist 받아오는 것\n\t\t// console.log(userHave);\n\t\tconst getData = async () => {\n\t\t\tconst postInput: FilterPostInputType = {\n\t\t\t\ttype: filters.type,\n\t\t\t\tcolor: filters.color,\n\t\t\t\tpattern: filters.pattern,\n\t\t\t\tuserHave: userHave,\n\t\t\t\trecommend: recommend,\n\t\t\t\tcursor: (page - 1) * 9,\n\t\t\t\tpageSize: 9,\n\t\t\t};\n\t\t\tsetIsLoading(true);\n\t\t\tdispatch(fetchFilteredOutfits(postInput));\n\t\t\tsetIsLoading(false);\n\t\t};\n\t\tgetData();\n\t}, [page, userHave, recommend, filters]);\n\n\tuseEffect(() => {\n\t\tsetIsLast(outfitState.isLast);\n\t}, [outfitState]);\n\n\tconst clickUserHaveHandler = () => {\n\t\tif (userHave == true) setUserHave(false);\n\t\telse {\n\t\t\tsetRecommend(false);\n\t\t\tsetUserHave(true);\n\t\t}\n\t\tsetPage(1);\n\t};\n\n\tconst clickRecommendHandler = () => {\n\t\tif (recommend == true) setRecommend(false);\n\t\telse {\n\t\t\tsetRecommend(true);\n\t\t\tsetUserHave(false);\n\t\t}\n\t\tsetPage(1);\n\t};\n\n\tconst clickFilterHandler = () => {\n\t\tsetModalOpen(true);\n\t};\n\n\tconst clickDoneHandler = (\n\t\ttype: string | null,\n\t\tcolor: string | null,\n\t\tpattern: string | null\n\t) => {\n\t\tsetModalOpen(false);\n\t\tsetClothFilter(true);\n\t\tsetFilters({\n\t\t\ttype: type,\n\t\t\tcolor: color,\n\t\t\tpattern: pattern,\n\t\t});\n\t\tsetPage(1);\n\t};\n\n\tconst clickResetHandler = () => {\n\t\tif (recommend || userHave || clothFilter) setPage(1);\n\n\t\tsetRecommend(false);\n\t\tsetUserHave(false);\n\t\tsetClothFilter(false);\n\t\tsetFilters({\n\t\t\ttype: null,\n\t\t\tcolor: null,\n\t\t\tpattern: null,\n\t\t});\n\t};\n\n\tconst clickNextPageHandler = () => {\n\t\tconsole.log(page);\n\t\tconst currentPage = page;\n\t\tsetPage(currentPage + 1);\n\t};\n\n\tconst clickBeforePageHandler = () => {\n\t\tconst currentPage = page;\n\t\tsetPage(currentPage - 1);\n\t};\n\n\tconst clickFirstPageHandler = () => {\n\t\tsetPage(1);\n\t};\n\n\tconst clickOutfitImageHandler = (outfit_id: number) => {\n\t\tconst navigateLink = \"/outfit/\" + outfit_id + \"/\";\n\t\tnavigate(navigateLink);\n\t};\n\n\tconst clickTypeDeleteButton = () => {\n\t\tif (filters.color == null && filters.pattern == null) {\n\t\t\tsetClothFilter(false);\n\t\t}\n\t\tconst newFilter = {\n\t\t\ttype: null,\n\t\t\tcolor: filters.color,\n\t\t\tpattern: filters.pattern,\n\t\t};\n\t\tsetFilters(newFilter);\n\t\tsetPage(1);\n\t};\n\n\tconst clickColorDeleteButton = () => {\n\t\tif (filters.type == null && filters.pattern == null) {\n\t\t\tsetClothFilter(false);\n\t\t}\n\t\tconst newFilter = {\n\t\t\ttype: filters.type,\n\t\t\tcolor: null,\n\t\t\tpattern: filters.pattern,\n\t\t};\n\t\tsetFilters(newFilter);\n\t\tsetPage(1);\n\t};\n\n\tconst clickPatternDeleteButton = () => {\n\t\tif (filters.type == null && filters.color == null) {\n\t\t\tsetClothFilter(false);\n\t\t}\n\t\tconst newFilter = {\n\t\t\ttype: filters.type,\n\t\t\tcolor: filters.color,\n\t\t\tpattern: null,\n\t\t};\n\t\tsetFilters(newFilter);\n\t\tsetPage(1);\n\t\tconsole.log(filters);\n\t};\n\n\treturn (\n\t\t<div className=\"OutfitPage\">\n\t\t\t<Header\n\t\t\t\tclickInfoHandler={() => {\n\t\t\t\t\tnavigate(\"/setting\");\n\t\t\t\t}}\n\t\t\t\tclickLogoutHandler={async () => {\n\t\t\t\t\tawait logoutUser().catch((error) => console.log(error));\n\t\t\t\t\tsetIsSending(!isSending);\n\t\t\t\t}}\n\t\t\t\tclickHeaderHandler={() => {\n\t\t\t\t\tnavigate(\"/home\");\n\t\t\t\t}}\n\t\t\t></Header>\n\t\t\t<div className=\"OutfitBody\">\n\t\t\t\t<div className=\"OutfitTitle\">Outfits</div>\n\t\t\t\t<div className=\"OutfitButtons\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tid={userHave ? \"userhave-button-on\" : \"userhave-button\"}\n\t\t\t\t\t\tonClick={() => clickUserHaveHandler()}\n\t\t\t\t\t>\n\t\t\t\t\t\tuserHave\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid={recommend ? \"recommend-button-on\" : \"recommend-button\"}\n\t\t\t\t\t\tonClick={() => clickRecommendHandler()}\n\t\t\t\t\t>\n\t\t\t\t\t\trecommend\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid={clothFilter ? \"filter-button-on\" : \"filter-button\"}\n\t\t\t\t\t\tonClick={() => clickFilterHandler()}\n\t\t\t\t\t>\n\t\t\t\t\t\tFilter\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"now-filter-div\">\n\t\t\t\t\t\t현재 필터 :\n\t\t\t\t\t\t{filters.type != null ? (\n\t\t\t\t\t\t\t<div className=\"now-type-filter-div\">\n\t\t\t\t\t\t\t\t옷 종류 : {filters.type}\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"type-filter-delete-button\"\n\t\t\t\t\t\t\t\t\tdata-testid=\"type-filter-delete-button\"\n\t\t\t\t\t\t\t\t\tonClick={() => clickTypeDeleteButton()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{filters.color != null ? (\n\t\t\t\t\t\t\t<div className=\"now-color-filter-div\">\n\t\t\t\t\t\t\t\t색 : {filters.color}\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"color-filter-delete-button\"\n\t\t\t\t\t\t\t\t\tdata-testid=\"color-filter-delete-button\"\n\t\t\t\t\t\t\t\t\tonClick={() => clickColorDeleteButton()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{filters.pattern != null ? (\n\t\t\t\t\t\t\t<div className=\"now-pattern-filter-div\">\n\t\t\t\t\t\t\t\t패턴 : {filters.pattern}\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"pattern-filter-delete-button\"\n\t\t\t\t\t\t\t\t\tdata-testid=\"pattern-filter-delete-button\"\n\t\t\t\t\t\t\t\t\tonClick={() => clickPatternDeleteButton()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button id=\"filter-reset-button\" onClick={() => clickResetHandler()}>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<Modal id=\"filter-modal\" isOpen={modalOpen}>\n\t\t\t\t\t<FilterModal clickDoneHandler={clickDoneHandler}></FilterModal>\n\t\t\t\t\t<div id=\"close-buton-div\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"modal-close-button\"\n\t\t\t\t\t\t\tdata-testid=\"modal-close-button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetModalOpen(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t닫기\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t\t<div className=\"OutfitImages\">\n\t\t\t\t\t{isLoading == true ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"loading-div\">Loading...</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className=\"outfit-list-div\">\n\t\t\t\t\t\t\t\t{outfitState.outfits.length == 0 ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<div className=\"no-outfit-div\">NO OUTFITS :(</div>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{outfitState.outfits.map((outfit, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"outfit-body\" key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"OutfitImage\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"outfit-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-testid=\"outfit-image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={outfit.image_link}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => clickOutfitImageHandler(outfit.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"OutfitData\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<text id=\"outfit-info-text\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{outfit.outfit_info}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className=\"page-buttons-div\">\n\t\t\t\t\t\t<div id=\"first-page-button-div\">\n\t\t\t\t\t\t\t{page == 1 ? (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tid=\"first-page-button\"\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"first-page-button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickFirstPageHandler()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t처음으로\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"before-page-button-div\">\n\t\t\t\t\t\t\t{page == 1 ? (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tid=\"before-page-button\"\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"before-page-button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickBeforePageHandler()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t이전 페이지\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"now-page-div\">{page}</div>\n\t\t\t\t\t\t<div id=\"next-page-button-div\">\n\t\t\t\t\t\t\t{isLast == true ? (\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tid=\"next-page-button\"\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"next-page-button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickNextPageHandler()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t다음 페이지\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,84,84,null,null,null,null,83,83,83,83,null,null,null,null,83,83,null,83,83,null,83,null,83,83,15,0,15,null,null,83,null,15,15,15,null,null,15,null,null,83,null,null,38,38,null,null,null,null,null,null,null,null,38,38,38,null,38,null,null,83,15,null,null,83,3,null,2,2,null,3,null,null,83,2,null,1,1,null,2,null,null,83,6,null,null,83,null,null,null,null,4,4,4,null,null,null,null,4,null,null,83,1,null,1,1,1,1,null,null,null,null,null,null,83,2,2,2,null,null,83,1,1,null,null,83,1,null,null,83,1,1,null,null,83,3,1,null,3,null,null,null,null,3,3,null,null,83,3,1,null,3,null,null,null,null,3,3,null,null,83,3,1,null,3,null,null,null,null,3,3,3,null,null,83,null,null,null,1,null,null,1,0,null,null,1,null,null,null,null,null,null,null,3,null,null,null,null,null,2,null,null,null,null,null,6,null,null,null,null,null,null,null,null,null,null,null,3,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,83,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[49,0,0,0,49,0,1,15,57,1,0,15,57,1,1,0,89,2,0,1,89,2,1,2,98,3,0,1,98,3,1,1,126,4,0,0,126,4,1,1,126,5,0,1,126,5,1,1,126,5,2,1,159,6,0,1,159,6,1,2,159,7,0,3,159,7,1,1,172,8,0,1,172,8,1,2,172,9,0,3,172,9,1,2,185,10,0,1,185,10,1,2,185,11,0,3,185,11,1,2,216,12,0,4,216,12,1,79,222,13,0,2,222,13,1,81,228,14,0,20,228,14,1,63,235,15,0,12,235,15,1,71,249,16,0,14,249,16,1,69,263,17,0,16,263,17,1,67,298,18,0,0,298,18,1,83,305,19,0,0,305,19,1,83,338,20,0,77,338,20,1,6,353,21,0,77,353,21,1,6,369,22,0,0,369,22,1,83]},{"name":"src/containers/OutfitDetail/OutfitDetail.tsx","source":"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport { AppDispatch } from \"../../store\";\nimport \"./OutfitDetail.css\";\nimport { fetchOutfit, fetchSampleCloth, selectOutfit } from \"../../store/slices/outfit\";\nimport Header from \"../../components/Header/Header\";\nimport { logoutUser } from \"../../api/user\";\nimport Modal from \"react-modal\";\nimport SampleClothModal from \"../../components/SampleClothModal/SampleClothModal\";\n\n\nconst OutfitDetail = () => {\n\tconst { id } = useParams();\n\n\tconst dispatch = useDispatch<AppDispatch>();\n\tconst navigate = useNavigate();\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [selectedCloth, setSelectedCloth] = useState(0);\n\tconst [userHave, setUserHave] = useState(false);\n\tconst outfitState = useSelector(selectOutfit);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchOutfit(Number(id)));\n\t}, []);\n\n\n\tconst clickPurchaseButtonHander = (purchase_link: string) => {\n\t\tnavigate(\"/Redirect\", { state: { url: purchase_link } });\n\t};\n\n\tconst clickClothHandler = async(id: number) => {\n\t\t//use modal\n\t\tsetModalOpen(true);\n\t\tawait dispatch(fetchSampleCloth(id))\n\t\tsetSelectedCloth(id);\n\t\tif (outfitState.userCloth === null){\n\t\t\tsetUserHave(false);\n\t\t}\n\t\telse{\n\t\t\tsetUserHave(true);\n\n\t\t}\n\t};\n\n\tconst [isSending, setIsSending] = useState(false);\n\tconst checkLoginned = () => {\n\t\tif (localStorage.getItem(\"username\") !== null) {\n\t\t\treturn true;\n\t\t} else return false;\n\t};\n\n\tuseEffect(() => {\n\t\tconst redirect = () => {\n\t\t\tif (!checkLoginned()) {\n\t\t\t\tnavigate(\"/\");\n\t\t\t}\n\t\t};\n\t\tredirect();\n\t}, [isSending]);\n\n\treturn (\n\t\t<div className=\"OutfitDetail\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<Header\n\t\t\t\t\tclickInfoHandler={() => {\n\t\t\t\t\t\tnavigate(\"/setting\");\n\t\t\t\t\t}}\n\t\t\t\t\tclickLogoutHandler={async () => {\n\t\t\t\t\t\tawait logoutUser().catch((error) => console.log(error));\n\t\t\t\t\t\tsetIsSending(!isSending);\n\t\t\t\t\t}}\n\t\t\t\t\tclickHeaderHandler={() => {\n\t\t\t\t\t\tnavigate(\"/home\");\n\t\t\t\t\t}}\n\t\t\t\t></Header>\n\t\t\t</div>\n\t\t\t<div className=\"OutfitDetail-body\">\n\t\t\t\t<div className=\"Outfit-image\">\n\t\t\t\t\t<img id=\"-outfit-img\" src={outfitState.selectedOutfit?.image_link} alt='로딩 중'/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"OutfitDetailData\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"outfit-purchase-button\"\n\t\t\t\t\t\tdata-testid=\"outfit-purchase-button\"\n\t\t\t\t\t\tonClick={() => clickPurchaseButtonHander(outfitState.selectedOutfit !== null ? outfitState.selectedOutfit.purchase_link : \"\")}\n\t\t\t\t\t>\n\t\t\t\t\t\tPurchase Button\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"OutfitName\">{outfitState.selectedOutfit?.outfit_name}</div>\n\t\t\t\t\t<div className=\"OutfitInfo\">{outfitState.selectedOutfit?.outfit_info}</div>\n\t\t\t\t\t<text id=\"samplecloth-title\">구성하는 옷들</text>\n\t\t\t\t\t<div className=\"sampleClothes\">\n\t\t\t\t\t\t{outfitState.sampleClothes.map((sc) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"sampleCloth-image\" key={sc.id}>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tid=\"samplecloth-img\"\n\t\t\t\t\t\t\t\t\t\tdata-testid=\"samplecloth-image\"\n\t\t\t\t\t\t\t\t\t\tsrc={sc.image_link}\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickClothHandler(sc.id)}\n\t\t\t\t\t\t\t\t\t\talt = '로딩 중'\n\t\t\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Modal id=\"sample-modal\" isOpen={modalOpen} ariaHideApp={false}>\n\t\t\t\t\t<SampleClothModal\n\t\t\t\t\t\tuserHave={userHave}\n\t\t\t\t\t\tuserCloth_url={outfitState.userCloth === null ? \"\" : outfitState.userCloth.image_link}\n\t\t\t\t\t\tsampleCloth_url={outfitState.sampleCloth === null ? \"\" : outfitState.sampleCloth.image_link}\n\t\t\t\t\t\ttype={outfitState.sampleCloth === null ? \"\" : outfitState.sampleCloth.type}\n\t\t\t\t\t\tcolor={outfitState.sampleCloth === null ? \"\" : outfitState.sampleCloth.color}\n\t\t\t\t\t\tpattern={outfitState.sampleCloth === null ? \"\" : outfitState.sampleCloth.pattern}\n\t\t\t\t\t\tsampleCloth_name={outfitState.sampleCloth === null ? \"\" : outfitState.sampleCloth.name}\n\t\t\t\t\t\tsampleCloth_link={outfitState.sampleCloth === null ? \"\" : outfitState.sampleCloth.purchase_link}\n\t\t\t\t\t></SampleClothModal>\n\t\t\t\t\t<div id=\"close-buton-div\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"modal-close-button\"\n\t\t\t\t\t\t\tdata-testid=\"modal-close-button\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetModalOpen(false);\n\t\t\t\t\t\t\t\tsetSelectedCloth(-1);\n\t\t\t\t\t\t\t\tsetUserHave(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t닫기\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default OutfitDetail;\n","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,1,11,null,10,10,10,10,10,10,null,10,7,null,null,null,10,1,null,null,10,null,2,2,2,2,2,null,null,0,null,null,null,null,10,10,7,0,7,null,null,10,7,7,7,null,null,7,null,null,10,null,null,null,null,1,null,null,1,0,null,null,1,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,20,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,1,1,null,null,null,null,null,null,null,null,null,null,null,null],"branches":[38,0,0,2,38,0,1,0,49,1,0,0,49,1,1,7,56,2,0,7,56,2,1,0,87,3,0,0,87,3,1,1,113,4,0,10,113,4,1,0,114,5,0,10,114,5,1,0,115,6,0,10,115,6,1,0,116,7,0,10,116,7,1,0,117,8,0,10,117,8,1,0,118,9,0,10,118,9,1,0,119,10,0,10,119,10,1,0]},{"name":"src/containers/Redirect/Redirect.tsx","source":"import { useLocation } from \"react-router-dom\";\n\nconst Redirect = () => {\n\tconst location = useLocation();\n\tconst { url } = location.state as { url: string };\n\tif (url) window.location.href = url;\n\n\treturn null;\n};\n\nexport default Redirect;","coverage":[null,null,0,0,0,0,null,0,null,null,null],"branches":[6,0,0,0,6,0,1,0]},{"name":"src/containers/Setting/Setting.tsx","source":"import { logoutUser, editUser, deleteUser } from '../../api/user';\nimport React, { useEffect, useState} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/Header/Header\";\nimport \"./Setting.css\";\n\nexport default function Setting() {\n\tconst navigate = useNavigate();\n\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [checkPassword, setCheckPassword] = useState(\"\")\n    const [errMsg, setErrMsg] = useState(\"\");\n\n\t//for logout\n\tconst [isSending, setIsSending] = useState(false)\n\tconst checkLoginned = () => {\n\t\tif(localStorage.getItem(\"username\") !== null){\n\t\t\treturn true\n\t\t}\n\t\telse return false\n\t};\n\n    const getName = () => {\n        const n = localStorage.getItem(\"username\")\n        if(n !== null) setName(n)\n    }\n    \n    const clickEditBtnHandler = async() => {\n        if(password === \"\"){\n            setErrMsg(\"비밀번호를 입력해주세요\")\n        }\n        else{\n            await editUser(password).then(() => {\n                navigate(\"/home\")\n            }).catch((e) => console.log(e))\n        }\n        \n        \n    }\n\n    const clickWithdrawBtnHandler = async() => {\n        await deleteUser().then(() => {\n            navigate(\"/\")\n        }) .catch((e) => console.log(e))\n    \n        \n    }\n\n\tuseEffect(() => {\n\t\tconst redirect = () => {\n\t\t\tif (!checkLoginned()) {\n\t\t\t\tnavigate(\"/\");\n\t\t\t}\n\t\t};\n\t\tredirect();\n        getName();\n\t}, [isSending]);\n\n    useEffect(() => {\n        const checkPw = () => {\n            if(password != checkPassword){\n                setErrMsg(\"비밀번호가 일치하지 않습니다.\")\n            }\n            else{\n                setErrMsg(\"\")\n            }\n        }\n        checkPw()\n    }, [checkPassword, password])\n\n\n    return (\n        <div className=\"Setting\">\n            <div className=\"Setting-header\"\n                data-testid='Header'>\n                <Header\n                    clickInfoHandler={() => {\n                        navigate(\"/setting\");\n                    }}\n                    clickLogoutHandler={async() => {\n                        await logoutUser().catch((error) => console.log(error))\n                        setIsSending(!isSending)\n                    }}\n                    clickHeaderHandler={() => {\n                        navigate(\"/home\");\n                    }}\n                ></Header>\n            </div>\n            <div className=\"Setting-bottom\">\n                <div className=\"Setting-left\">\n                </div>\n                <div className=\"Setting-right\">\n                    <text id='myinfo-text'>내 정보 설정</text>\n                    <div id='text-input'>\n                        <text id='name-text'>아이디</text>\n                        <input id='name-input' defaultValue={name} disabled={true}></input>\n                    </div>\n                    <div id='text-input'>\n                        <text id='name-text' >비밀번호</text>\n                        <input id='name-input' data-testid=\"password-input\" \n                        onChange={(event) => {setPassword(event.target.value)}}\n                        value={password}></input>\n                    </div>\n                    <div id='text-input'>\n                        <text id='name-text'>비밀번호확인</text>\n                        <input id='name-input' data-testid=\"password-check-input\" \n                        onChange={(event) => {setCheckPassword(event.target.value)}}\n                        value={checkPassword}></input>\n                    </div>\n                    <div id='text-input'>\n                        <text>{errMsg}</text>\n                    </div>\n                    <div id='text-input'>\n                        <button id='deleteButton' data-testid=\"delete-button\" onClick={() => {clickWithdrawBtnHandler()}}>회원탈퇴</button>\n                        <button id='okButton' data-testid=\"ok\"\n                        disabled={errMsg === \"\" ? false : true}\n                        onClick={() => {clickEditBtnHandler()}}>확인</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","coverage":[null,null,null,null,null,null,null,26,null,26,25,25,25,null,null,25,25,9,0,null,9,null,null,25,9,9,null,null,25,4,2,null,null,2,2,0,null,null,null,null,null,25,2,2,0,null,null,null,null,25,9,9,9,null,null,9,9,null,null,25,15,15,4,null,null,11,null,null,15,null,null,null,25,null,null,null,null,null,1,null,null,1,1,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,null,null,null,null,3,null,null,null,null,null,null,2,null,null,4,null,null,null,null,null,null],"branches":[18,0,0,0,18,0,1,9,26,1,0,0,26,1,1,9,30,2,0,2,30,2,1,2,52,3,0,9,52,3,1,0,62,4,0,4,62,4,1,11,117,5,0,12,117,5,1,13]},{"name":"src/containers/Signup/Signup.tsx","source":"import React, { useEffect } from \"react\";\nimport {  useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { signupUser } from \"../../api/user\";\nimport \"./Signup.css\";\n\nexport default function Signup() {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n    const [checkPassword, setCheckPassword] = useState(\"\");\n\tconst [wrongInput, setWrongInput] = useState(\"\");\n\n    const TEXTISEMPTY = \"ID와 패스워드는 필수로 입력해야합니다.\"\n    const DUPLICATE_ID = \"해당 ID가 이미 존재합니다.\"\n    const WRONG_PASSWORD = \"패스워드 확인이 일치하지 않습니다.\"\n\tconst navigate = useNavigate();\n\n\tconst checkSignupned = () => {\n\t\tconsole.log(localStorage.getItem(\"token\"));\n\t\treturn (\n\t\t\tlocalStorage.getItem(\"username\") !== null &&\n\t\t\t(localStorage.getItem(\"token\") !== null ||\n\t\t\t\tlocalStorage.getItem(\"token\") !== undefined)\n\t\t);\n\t\t// return false;\n\t};\n\n\tuseEffect(() => {\n\t\tconst redirect = () => {\n\t\t\tif (checkSignupned()) {\n\t\t\t\tnavigate(\"/home\");\n\t\t\t}\n\t\t};\n\t\tredirect();\n\t}, []);\n\n    const postSignUpHandler = async() => {\n        // check test empty\n        if (username === \"\" || password === \"\"){\n            setWrongInput(TEXTISEMPTY)\n        }\n        //check wrong_password\n        else if (password !== checkPassword){\n            setWrongInput(WRONG_PASSWORD)\n        }\n        else {\n            await signupUser(username, password).then(() => {\n                navigate(\"/\")\n            }).catch((error) => {\n                console.log(error)\n                setWrongInput(DUPLICATE_ID)\n            })\n        }\n    }\n\n\treturn (\n\t\t<div className=\"Signup\">\n\t\t\t<div className=\"header-div\">\n\t\t\t\t<text id=\"appName\">oOo</text>\n\t\t\t\t<text id=\"detailAppName\">:recommend your outfit</text>\n\t\t\t</div>\n\t\t\t<div className=\"form\">\n\t\t\t\t<div className=\"form-margin-left\"></div>\n\t\t\t\t<div className=\"Signup-form\">\n\t\t\t\t\t<div className=\"Signup-text\">\n\t\t\t\t\t\t<text id=\"signin-signup-text\">로그인 및 회원가입</text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"username-div\">\n\t\t\t\t\t\t<text id=\"username-text\">ID</text>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"username-input\"\n\t\t\t\t\t\t\tdata-testid=\"username-input\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\tonChange={(event) => setUsername(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"pw-div\">\n\t\t\t\t\t\t<text id=\"pw-text\">PW</text>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"pw-input\"\n\t\t\t\t\t\t\tdata-testid=\"pw-input\"\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"checkpw-div\">\n\t\t\t\t\t\t<text id=\"checkpw-text\">PW확인</text>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"checkpw-input\"\n\t\t\t\t\t\t\tdata-testid=\"checkpw-input\"\n\t\t\t\t\t\t\tvalue={checkPassword}\n\t\t\t\t\t\t\tonChange={(event) => setCheckPassword(event.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"wrong-div\">\n\t\t\t\t\t\t<text data-testid=\"wrong-text\" id=\"wrong-text\">{wrongInput}</text>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"button-div\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid=\"signup-button\"\n\t\t\t\t\t\t\tdata-testid=\"signup-button\"\n\t\t\t\t\t\t\tonClick={() => postSignUpHandler()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t가입하기\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-margin-right\"></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","coverage":[null,null,null,null,null,null,null,16,15,15,15,null,15,15,15,15,null,15,4,4,null,null,null,null,null,null,null,15,4,4,0,null,null,4,null,null,15,null,4,1,null,null,3,1,null,null,2,2,null,0,0,null,null,null,null,15,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3,null,null,null,null,null,null,null,null,3,null,null,null,null,null,null,null,null,3,null,null,null,null,null,null,null,null,null,null,4,null,null,null,null,null,null,null,null,null,null],"branches":[21,0,0,4,21,0,1,0,21,0,2,0,30,1,0,0,30,1,1,4,39,2,0,1,39,2,1,3,39,3,0,4,39,3,1,3,43,4,0,1,43,4,1,2]},{"name":"src/store/index.ts","source":"import { configureStore } from \"@reduxjs/toolkit\";\nimport userClothReducer from \"./slices/userCloth\";\nimport outfitReducer from \"./slices/outfit\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tuserCloth: userClothReducer,\n\t\toutfit: outfitReducer,\n\t},\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type AppStore = typeof store;\n","coverage":[null,null,null,null,1,null,null,null,null,null,null,null,null,null]},{"name":"src/store/slices/outfit.ts","source":"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"..\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n\nexport interface OutfitType {\n\tid: number;\n\toutfit_info: string;\n\toutfit_name: string;\n\tpopularity: number;\n\timage_link: string;\n\tpurchase_link: string;\n}\n\nexport interface FilterType {\n\tcolor: string | null;\n\ttype: string | null;\n\tpattern: string | null;\n\tuserHave: boolean;\n\trecommend: boolean;\n}\n\nexport interface FilterPostInputType {\n\tcolor: string | null;\n\ttype: string | null;\n\tpattern: string | null;\n\tuserHave: boolean;\n\trecommend: boolean;\n\tcursor: number;\n\tpageSize: number;\n}\n\nexport interface SampleClothType {\n\tid: number;\n\tname: string;\n\timage_link: string;\n\toutfit: number;\n\tcolor: string;\n\ttype: string;\n\tpattern: string;\n\tpurchase_link: string;\n}\n\nexport interface UserClothType {\n\tid: number;\n\tname: string;\n\timage_link: string;\n\tuser: number;\n\tcolor: string;\n\ttype: string;\n\tpattern: string;\n}\n\nexport interface OutfitState {\n\toutfits: OutfitType[];\n\tselectedOutfit: OutfitType | null;\n\tfilter: FilterType;\n\tsampleClothes: SampleClothType[];\n\tsampleCloth: SampleClothType | null;\n\tuserCloth: UserClothType | null;\n\tcursor: number;\n\tisLast: boolean;\n}\n\nexport interface fetchOutputState {\n\tisLast: boolean;\n\tcursor: number;\n\toutfits: OutfitType[];\n}\n\nexport interface fetchFilteredOutputState {\n\tcolor: string | null;\n\ttype: string | null;\n\tpattern: string | null;\n\tuserHave: boolean;\n\trecommend: boolean;\n\tisLast: boolean;\n\tcursor: number;\n\toutfits: OutfitType[];\n}\n\nconst initialState: OutfitState = {\n\toutfits: [],\n\tselectedOutfit: null,\n\tfilter: {\n\t\tcolor: null,\n\t\ttype: null,\n\t\tpattern: null,\n\t\tuserHave: false,\n\t\trecommend: false,\n\t},\n\tsampleClothes: [],\n\tsampleCloth: null,\n\tuserCloth: null,\n\tcursor: 0,\n\tisLast: false,\n};\n\nconst headers = {\n\tusername: localStorage.getItem(\"username\"),\n};\n\nexport const fetchOutfits = createAsyncThunk(\n\t\"outfit/fetchOutfits\",\n\tasync (cursor, pageSize) => {\n\t\tconst response = await axios.get<fetchOutputState>(\"/api/ooo/outfit/\", {\n\t\t\t// headers,\n\t\t\tparams: {\n\t\t\t\tcursor: cursor,\n\t\t\t\tpageSize: pageSize,\n\t\t\t},\n\t\t});\n\t\tconsole.log(response.data);\n\t\treturn response.data;\n\t}\n);\n\nexport const fetchFilteredOutfits = createAsyncThunk(\n\t\"outfit/fetchFilteredOutfits\",\n\tasync (data: FilterPostInputType) => {\n\t\tconst response = await axios.post<fetchFilteredOutputState>(\n\t\t\t\"/api/ooo/outfit/\",\n\t\t\t{\n\t\t\t\theaders,\n\t\t\t\tbody: data,\n\t\t\t}\n\t\t);\n\t\tconsole.log(response.data);\n\t\treturn response.data;\n\t}\n);\n\nexport const fetchOutfit = createAsyncThunk(\n\t\"outfit/fetchOutfit\",\n\tasync (id: OutfitType[\"id\"]) => {\n\t\tconsole.log(\"fetchOutfit\");\n\t\tconst response = await axios.get(`/api/ooo/outfit/${id}/`, {\n\t\t\t// headers,\n\t\t});\n\t\t// console.log(\"fetchOutfit\", response.data);\n\t\treturn response.data ?? null;\n\t}\n);\n\nexport const fetchSampleCloth = createAsyncThunk(\n\t\"outfit/fetchSampleCloth\",\n\tasync (id: OutfitType[\"id\"]) => {\n\t\tconst response = await axios.get(`/api/ooo/outfit/samplecloth/${id}/`, {\n\t\t\t// headers,\n\t\t});\n\t\tif (response.status === 200) {\n\t\t\treturn response.data;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\t// return response.data;\n\t}\n);\n\nexport const outfitSlice = createSlice({\n\tname: \"outfit\",\n\tinitialState,\n\treducers: {\n\t\teditFilter: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<{\n\t\t\t\tcolor: string | null;\n\t\t\t\ttype: string | null;\n\t\t\t\tpattern: string | null;\n\t\t\t\tuserHave: boolean;\n\t\t\t\trecommend: boolean;\n\t\t\t}>\n\t\t) => {\n\t\t\tstate.filter = action.payload;\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\t// Add reducers for additional action types here, and handle loading state as needed\n\t\tbuilder.addCase(fetchOutfits.fulfilled, (state, action) => {\n\t\t\t// Add user to the state array\n\t\t\tstate.outfits = action.payload.outfits;\n\t\t\tstate.isLast = action.payload.isLast;\n\t\t\tstate.cursor = action.payload.cursor;\n\t\t});\n\t\tbuilder.addCase(fetchFilteredOutfits.fulfilled, (state, action) => {\n\t\t\t// Add user to the state array\n\t\t\tstate.outfits = action.payload.outfits;\n\t\t\tstate.isLast = action.payload.isLast;\n\t\t\tstate.cursor = action.payload.cursor;\n\t\t});\n\t\tbuilder.addCase(fetchOutfit.fulfilled, (state, action) => {\n\t\t\tconsole.log(action.payload);\n\t\t\tstate.selectedOutfit = action.payload.outfit;\n\t\t\tstate.sampleClothes = action.payload.sampleclothes;\n\t\t});\n\t\tbuilder.addCase(fetchSampleCloth.fulfilled, (state, action) => {\n\t\t\tif (action.payload.usercloth.id !== -1) {\n\t\t\t\tstate.userCloth = action.payload.usercloth;\n\t\t\t}\n\t\t\tstate.sampleCloth = action.payload.samplecloth;\n\t\t});\n\t},\n});\n\nexport const outfitActions = outfitSlice.actions;\nexport const selectOutfit = (state: RootState) => state.outfit;\n\nexport default outfitSlice.reducer;\n","coverage":[null,null,null,9,9,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9,null,null,null,9,null,null,1,null,null,null,null,null,null,1,1,null,null,null,9,null,null,1,null,null,null,null,null,null,1,1,null,null,null,9,null,null,2,2,null,null,null,2,null,null,null,9,null,null,1,null,null,1,1,null,0,null,null,null,null,null,9,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,9,null,1,1,1,null,9,null,1,1,1,null,9,2,2,2,null,9,1,1,null,1,null,null,null,null,9,27,null,null],"branches":[142,0,0,2,142,0,1,0,152,1,0,1,152,1,1,0,198,2,0,1,198,2,1,0]},{"name":"src/store/slices/userCloth.ts","source":"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"..\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\nexport interface UserClothType {\n\tid: number;\n\tname: string;\n\timage_link: string;\n\tcolor: string;\n\ttype: string;\n\tpattern: string;\n\t// user: number;\n\tdates: string;\n}\nexport interface TempUserClothType {\n\tid: number;\n\tname: string;\n\timage: File;\n\tuser: number;\n\tcolor: string;\n\ttype: string;\n\tpattern: string;\n\tdates: string;\n}\nexport interface TodayOutfitType {\n\tid: number;\n\toutfit_info: string;\n\tpopularity: number;\n\timage_link: string;\n\tuserclothes: UserClothType[]\n}\n\nexport interface UserClothState {\n\tuserClothes: UserClothType[];\n\tselectedUserCloth: UserClothType | null;\n\trecommendOutfit: TodayOutfitType | null;\n}\n\nconst initialState: UserClothState = {\n\tuserClothes: [],\n\tselectedUserCloth: null,\n\trecommendOutfit: null\n};\n\nconst headers = {\n\tusername: localStorage.getItem(\"username\"),\n};\n\nexport const fetchUserClothes = createAsyncThunk(\n\t\"closet/fetchUserClothes\",\n\tasync () => {\n\t\tconst response = await axios.get<UserClothType[]>(\"/api/ooo/closet/\");\n\t\treturn response.data;\n\t}\n);\n\nexport const fetchUserCloth = createAsyncThunk(\n\t\"closet/fetchUserCloth\",\n\tasync (id: UserClothType[\"id\"]) => {\n\t\tconst response = await axios.get(`/api/ooo/closet/${id}/`);\n\t\treturn response.data ?? null;\n\t}\n);\n\nexport const fetchRecommendOutfit = createAsyncThunk(\n\t\"outfit/today\",\n\tasync () => {\n\t\tconst response = await axios.get('/api/ooo/outfit/today/')\n\t\tif(response.status === 200){\n\t\t\treturn response.data\n\t\t}\n\t\telse return null\n\t}\n)\n\nexport const createUserCloth = createAsyncThunk(\n\t\"closet/createUserCloth\",\n\tasync (\n\t\tdata: Pick<TempUserClothType, \"name\" | \"image\" | \"color\" | \"type\" | \"pattern\">,\n\t\t{ dispatch }\n\t) => {\n\t\tconst formData = new FormData();\n\t\tformData.append('name',data.name)\n\t\tformData.append(\"image\",data.image)\n\t\tformData.append('color',data.color)\n\t\tformData.append('type',data.type)\n\t\tformData.append('pattern', data.pattern)\n\t\tformData.append('enctype',\"multipart/form-data\")\n\t\tconst response = await axios.post(\n\t\t\t\"/api/ooo/closet/\",formData,\n\t\t\t{\n\t\t\t\t// headers:headers\n\t\t\t\t// headers:{\n\t\t\t\t// \t'Context-Type':'multipare/form-data',\n\t\t\t\t// \tusername: localStorage.getItem(\"username\"),\n\t\t\t\t// },\n\t\t\t}\n\t\t);\n\t\tdispatch(userClothActions.createUserCloth(response.data));\n\t\t// console.log(response.data);\n\t\t// return response.data;\n\t}\n);\n\nexport const editUserCloth = createAsyncThunk(\n\t\"closet/editUserCloth\",\n    async (\n\t\tdata: Pick<UserClothType, \"id\" | \"type\" | \"color\" | \"pattern\">,\n\t\t{ dispatch }\n\t) => {\n        const response = await axios.put(\n\t\t\t`/api/ooo/closet/${data.id}/`,\n\t\t\t{\n\t\t\t\theaders,\n\t\t\t\tbody: data\n\t\t\t}\n\t\t);\n        dispatch(userClothActions.editUserCloth(response.data));\n    }\n);\n\nexport const addWearDate = createAsyncThunk(\n\t\"closet/addWearDate\",\n    async (\n\t\tdata: Pick<UserClothType, \"id\" | \"dates\">,\n\t\t{ dispatch }\n\t) => {\n        const response = await axios.post(\n\t\t\t`/api/ooo/closet/${data.id}/`,\n\t\t\t{\n\t\t\t\theaders,\n\t\t\t\tbody: data\n\t\t\t}\n\t\t);\n\t\tif(response.status === 200){\n\t\t\treturn response.data\n\t\t}\n        dispatch(userClothActions.addWearDate(response.data));\n    }\n);\n\nexport const deleteUserCloth = createAsyncThunk(\n\t\"closet/deleteUserCloth\",\n\tasync (id: UserClothType[\"id\"], { dispatch }) => {\n\t\tawait axios.delete(`/api/ooo/closet/${id}/`);\n\t\tdispatch(userClothActions.deleteUserCloth({ targetId: id }));\n\t}\n);\n\nexport const userClothSlice = createSlice({\n\tname: \"userClothes\",\n\tinitialState,\n\treducers: {\n\t\t// getAll: (state, action: PayloadAction<{ userClothes: UserClothType[] }>) => {},\n\t\t// getUserCloth: (state, action: PayloadAction<{ targetId: number }>) => {\n\t\t// \tconst target = state.userClothes.find(\n\t\t// \t\t(td) => td.id === action.payload.targetId\n\t\t// \t);\n\t\t// \tstate.selectedUserCloth = target ?? null;\n\t\t// },\n\t\tcreateUserCloth: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<{\n\t\t\t\tid: number;\n\t\t\t\tname: string;\n\t\t\t\timage_link: string;\n\t\t\t\timage: string;\n\t\t\t\tuser: number;\n\t\t\t\tcolor: string;\n\t\t\t\ttype: string;\n\t\t\t\tpattern: string;\n\t\t\t\tlabel_set_id: number;\n\t\t\t\tdates: string;\n\t\t\t}>\n\t\t) => {\n\t\t\tconst newUserCloth = {\n\t\t\t\tid: state.userClothes[state.userClothes.length - 1].id + 1,\n\t\t\t\tname: action.payload.name,\n\t\t\t\timage_link: action.payload.image_link,\n\t\t\t\timage: action.payload.image,\n\t\t\t\tuser: action.payload.user,\n\t\t\t\tcolor: action.payload.color,\n\t\t\t\ttype: action.payload.type,\n\t\t\t\tpattern: action.payload.pattern,\n\t\t\t\tlabel_set_id: action.payload.label_set_id,\n\t\t\t\tdates: \"\"\n\t\t\t};\n\t\t\tstate.userClothes.push(newUserCloth);\n\t\t},\n\t\teditUserCloth: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<{\n\t\t\t\ttargetId: number\n\t\t\t\ttype: string;\n\t\t\t\tcolor: string;\n\t\t\t\tpattern: string;\n\t\t\t}>\n\t\t) => {\n\t\t\tconst fetchTargetItem = state.userClothes.find((targetCloth) => {\n\t\t\t\tconsole.log(targetCloth)\n\t\t\t\tif (targetCloth.id == action.payload.targetId) {\n\t\t\t\t\ttargetCloth.type = action.payload.type\n\t\t\t\t\ttargetCloth.color = action.payload.color\n\t\t\t\t\ttargetCloth.pattern = action.payload.pattern\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tdeleteUserCloth: (state, action: PayloadAction<{ targetId: number }>) => {\n\t\t\tconst deleted = state.userClothes.filter((userCloth) => {\n\t\t\t\treturn userCloth.id !== action.payload.targetId;\n\t\t\t});\n\t\t\tstate.userClothes = deleted;\n\t\t},\n\t\taddWearDate: (\n\t\t\tstate,\n\t\t\taction: PayloadAction<{\n\t\t\t\ttargetId: number;\n\t\t\t\tweardate: string;\n\t\t\t}>\n\t\t) => {\n\t\t\t//\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\t// Add reducers for additional action types here, and handle loading state as needed\n\t\tbuilder.addCase(fetchUserClothes.fulfilled, (state, action) => {\n\t\t\t// Add user to the state array\n\t\t\tstate.userClothes = action.payload;\n\t\t});\n\t\tbuilder.addCase(fetchUserCloth.fulfilled, (state, action) => {\n\t\t\tstate.selectedUserCloth = action.payload;\n\t\t});\n\t\tbuilder.addCase(createUserCloth.rejected, (_state, action) => {\n\t\t\tconsole.error(action.error);\n\t\t});\n\t\tbuilder.addCase(fetchRecommendOutfit.fulfilled, (state, action) => {\n\t\t\tstate.recommendOutfit = action.payload;\n\t\t})\n\t},\n});\n\nexport const userClothActions = userClothSlice.actions;\nexport const selectUserCloth = (state: RootState) => state.userCloth;\n\nexport default userClothSlice.reducer;\n","coverage":[null,null,null,9,9,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9,null,null,null,null,null,9,null,null,null,9,null,null,1,1,null,null,null,9,null,null,2,2,null,null,null,9,null,null,0,0,0,null,0,null,null,null,9,null,null,null,null,null,0,0,0,0,0,0,0,0,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,9,null,null,null,null,null,0,null,null,null,null,null,null,0,null,null,null,9,null,null,null,null,null,0,null,null,null,null,null,null,0,0,null,0,null,null,null,9,null,null,1,1,null,null,null,9,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,null,null,null,null,null,null,null,0,0,0,0,0,0,null,null,null,null,1,1,null,1,null,null,null,null,null,null,null,null,null,null,null,null,null,9,null,1,null,9,2,null,9,0,null,9,0,null,null,null,null,9,9,null,null],"branches":[62,0,0,2,62,0,1,1,70,1,0,0,70,1,1,0,136,2,0,0,136,2,1,0,202,3,0,0,202,3,1,0]}],"parallel":false}
